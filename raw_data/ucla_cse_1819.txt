1. Freshman Computer Science Seminar. (1) Sem- inar, one hour; discussion, one hour. Introduction to department resources and principal topics and key ideas in computer science and computer engineering. Assignments given to bolster independent study and writing skills. Letter grading.
19. Fiat Lux Freshman Seminars. (1) Seminar, one hour. Discussion of and critical thinking about topics of current intellectual importance, taught by faculty members in their areas of expertise and illuminating many paths of discovery at UCLA. P/NP grading.
Computer Science / 285
286 / Computer Science
30. Principles and Practices of Computing. (4)
Lecture, four hours; discussion, two hours; outside study, six hours. Designed for students in computer science and related majors who do not have prior programming experience. Precursor course to intro- ductory computer science sequence (courses 31, 32, 33). Teaches students how to use computers as tool for problem solving, creativity, and exploration through design and implementation of computer pro- grams. Key topics are data types including integers, strings, and lists; control structures, including condi- tionals and loops; and functional decomposition. Letter grading.
31. Introduction to Computer Science I. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Introduction to computer science via theory, applications, and programming. Basic data types, operators and control structures. Input/output. Procedural and data abstraction. Introduction to ob- ject-oriented software development. Functions, recur- sion. Arrays, strings, pointers. Abstract data types, object-oriented programming. Examples and exer- cises from computer science theory and applications. Letter grading.
32. Introduction to Computer Science II. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 31. Object-ori- ented software development. Abstract data type defi- nition and use. Overloading, inheritance, polymor- phism. Object-oriented view of data structures: stacks, queues, lists. Algorithm analysis. Trees, graphs, and associated algorithms. Searching and sorting. Case studies and exercises from computer science applications. Letter grading.
33. Introduction to Computer Organization. (5)
Lecture, four hours; discussion, two hours; outside study, nine hours. Enforced requisite: course 32. In- troductory course on computer architecture, as- sembly language, and operating systems fundamen- tals. Number systems, machine language, and as- sembly language. Procedure calls, stacks, interrupts, and traps. Assemblers, linkers, and loaders. Oper- ating systems concepts: processes and process management, input/output (I/O) programming, memory management, file systems. Letter grading. 35L. Software Construction Laboratory. (3) Labo- ratory, four hours; outside study, five hours. Requisite: course 31. Fundamentals of commonly used software tools and environments, particularly open-source tools to be used in upper-division computer science courses. Letter grading.
M51A. Logic Design of Digital Systems. (4) (Same as Electrical and Computer Engineering M16.) Lec- ture, four hours; discussion, two hours; outside study, six hours. Introduction to digital systems. Specifica- tion and implementation of combinational and se- quential systems. Standard logic modules and pro- grammable logic arrays. Specification and implemen- tation of algorithmic systems: data and control sections. Number systems and arithmetic algorithms. Error control codes for digital information. Letter grading.
97. Variable Topics in Computer Science. (1 to 4)
Lecture, one to four hours; discussion, zero to two hours. Designed for freshmen/sophomores. Variable topics in computer science not covered in regular computer science courses. May be repeated once for credit with topic or instructor change. Letter grading. 99. Student Research Program. (1 to 2) Tutorial (su- pervised research or other scholarly work), three hours per week per unit. Entry-level research for lower-division students under guidance of faculty mentor. Students must be in good academic standing and enrolled in minimum of 12 units (excluding this course). Individual contract required; consult Under- graduate Research Center. May be repeated. P/NP grading.
Upper-Division Courses
111. Operating Systems Principles. (5) Lecture, four hours; laboratory, two hours; outside study, nine hours. Enforced requisites: courses 32, 33, 35L. Intro- duction to operating systems design and evaluation.
Computer software systems performance, robust- ness, and functionality. Kernel structure, bootstrap- ping, input/output (I/O) devices and interrupts. Pro- cesses and threads; address spaces, memory man- agement, and virtual memory. Scheduling, synchronization. File systems: layout, performance, robustness. Distributed systems: networking, remote procedure call (RPC), asynchronous RPC, distributed file systems, transactions. Protection and security. Exercises involving applications using, and internals of, real-world operating systems. Letter grading.
112. Modeling Uncertainty in Information Systems. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisites: course 111 and one course from Civil Engineering 110, Electrical En- gineering 131A, Mathematics 170A, or Statistics 100A. Designed for juniors/seniors. Probability and stochastic process models as applied in computer science. Basic methodological tools include random variables, conditional probability, expectation and higher moments, Bayes theorem, Markov chains. Ap- plications include probabilistic algorithms, evidential reasoning, analysis of algorithms and data structures, reliability, communication protocol and queueing models. Letter grading.
117. Computer Networks: Physical Layer. (4) (For- merly numbered M117.) Lecture, two hours; discus- sion, two hours; laboratory, two hours; outside study, six hours. Not open to students with credit for course M171L. Introduction to fundamental computer com- munication concepts underlying and supporting modern networks, with focus on wireless communi- cations and media access layers of network protocol stack. Systems include wireless LANs (IEEE802.11) and ad hoc wireless and personal area networks (e.g., Bluetooth, ZigBee). Experimental project based on mobile radio-equipped devices (smart phones, tab- lets, etc.) as sensor platforms for personal applica- tions such as wireless health, positioning, and envi- ronment awareness, and experimental laboratory ses- sions included. Letter grading.
118. Computer Network Fundamentals. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 111. Designed for juniors/seniors. Introduction to design and perfor- mance evaluation of computer networks, including such topics as what protocols are, layered network architecture, Internet protocol architecture, network applications, transport protocols, routing algorithms and protocols, internetworking, congestion control, and link layer protocols including Ethernet and wire- less channels. Letter grading.
M119. Fundamentals of Embedded Networked Systems. (4) (Same as Electrical and Computer Engi- neering M119.) Lecture, four hours; discussion, one hour; outside study, seven hours. Requisites: Civil and Environmental Engineering 110 or Electrical and Computer Engineering 131A or Mathematics 170A or Statistics 100A, course 118 or Electrical and Com- puter Engineering 132B, course 33. Design trade-offs and principles of operation of cyber physical systems such as devices and systems constituting Internet of Things. Topics include signal propagation and mod- eling, sensing, node architecture and operation, and applications. Letter grading.
CM121. Introduction to Bioinformatics. (4) (Same as Chemistry CM160A.) Lecture, four hours; discus- sion, two hours. Requisites: course 32 or Program in Computing 10C with grade of C– or better, and one course from Biostatistics 100A, Civil Engineering 110, Electrical Engineering 131A, Mathematics 170A, or Statistics 100A. Prior knowledge of biology not re- quired. Designed for engineering students as well as students from biological sciences and medical school. Introduction to bioinformatics and methodolo- gies, with emphasis on concepts and inventing new computational and statistical techniques to analyze biological data. Focus on sequence analysis and alignment algorithms. Concurrently scheduled with course CM221. P/NP or letter grading.
CM122. Algorithms in Bioinformatics. (4) (Same as Chemistry CM160B.) Lecture, four hours; discussion, two hours. Requisites: course 32 or Program in Com- puting 10C with grade of C– or better, and one course
from Biostatistics 100A, Civil Engineering 110, Elec- trical Engineering 131A, Mathematics 170A, or Statis- tics 100A. Course CM121 is not requisite to CM122. Designed for engineering students as well as students from biological sciences and medical school. Devel- opment and application of computational approaches to biological questions, with focus on formulating in- terdisciplinary problems as computational problems and then solving these problems using algorithmic techniques. Computational techniques include those from statistics and computer science. Concurrently scheduled with course CM222. Letter grading.
CM124. Computational Genetics. (4) (Same as Human Genetics CM124.) Lecture, four hours; dis- cussion, two hours; outside study, six hours. Requi- sites: course 32 or Program in Computing 10C with grade of C– or better, Mathematics 33A, and one course from Civil Engineering 110, Electrical and Computer Engineering 131A, Mathematics 170A, or Statistics 100A. Designed for engineering students as well as students from biological sciences and medical school. Introduction to computational analysis of ge- netic variation and computational interdisciplinary re- search in genetics. Topics include introduction to ge- netics, identification of genes involved in disease, in- ferring human population history, technologies for obtaining genetic information, and genetic se- quencing. Focus on formulating interdisciplinary problems as computational problems and then solving those problems using computational tech- niques from statistics and computer science. Concur- rently scheduled with course CM224. Letter grading. 130. Software Engineering. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requi- sites: courses 111, 131. Recommended requisite: En- gineering 183EW or 185EW. Structured programming, program specification, program proving, modularity, abstract data types, composite design, software tools, software control systems, program testing, team programming. Letter grading.
131. Programming Languages. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Enforced requisites: courses 33, 35L. Basic concepts in design and use of programming languages, in- cluding abstraction, modularity, control mechanisms, types, declarations, syntax, and semantics. Study of several different language paradigms, including func- tional, object-oriented, and logic programming. Letter grading.
132. Compiler Construction. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Req- uisite: course 131. Compiler structure; lexical and syntactic analysis; semantic analysis and code gener- ation; theory of parsing. Letter grading.
133. Parallel and Distributed Computing. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisites: courses 111 (may be taken concurrently), 131. Distributed memory and shared memory parallel architectures; asynchronous parallel languages: MPI, Maisie; primitives for parallel computation: specification of parallelism, interpro- cess communication and synchronization; design of parallel programs for scientific computation and dis- tributed systems. Letter grading.
136. Introduction to Computer Security. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 118. Introduc- tion to basic concepts of information security neces- sary for students to understand risks and mitigations associated with protection of systems and data. Topics include security models and architectures, se- curity threats and risk analysis, access control and authentication/authorization, cryptography, network security, secure application design, and ethics and law. Letter grading.
C137A. Prototyping Programming Languages. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 131. How different programming language paradigms provide dramatically different ways of thinking about compu- tation and offer trade-offs on many dimensions, such as modularity, extensibility, expressiveness, and safety. Concrete exploration of three major program- ming paradigms—functional, object-oriented, and

logic programming—by prototyping implementations of languages in each. Analysis of prototypes to shed light on design and structural properties of each lan- guage and paradigm and to allow easy comparison against one another. Hands-on experience imple- menting new abstractions, both as stand-alone lan- guages and as libraries in existing languages. Con- currently scheduled with course C237A. Letter grading.
C137B. Programming Language Design. (4) Sem- inar, four hours; outside study, eight hours. Enforced requisite: course C137A. Study of various program- ming language designs, from computing history and research literature, that attempt to address problems of software systems that are bloated, buggy, and diffi- cult to maintain and extend despite trend in com- puting toward ever higher levels of abstraction for programming. Hands-on experience designing, pro- totyping, and evaluating new languages, language abstractions, and/or programming environments. Concurrently scheduled with course C237B. Letter grading.
143. Database Systems. (4) Lecture, four hours; lab- oratory, two hours; outside study, six hours. Enforced requisite: course 111. Information systems and data- base systems in enterprises. File organization and secondary storage structures. Relational model and relational database systems. Network, hierarchical, and other models. Query languages. Database design principles. Transactions, concurrency, and recovery. Integrity and authorization. Letter grading.
144. Web Applications. (4) Lecture, four hours; dis- cussion, two hours; outside study, six hours. Enforced requisite: course 143. Important concepts and theory for building effective and safe Web applications and first-hand experience with basic tools. Topics include basic Web architecture and protocol, XML and XML query language, mapping between XML and relational models, information retrieval model and theory, secu- rity and user model, Web services and distributed transactions. Letter grading.
145. Introduction to Data Mining. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 180. Introductory survey of data mining (process of automatic discovery of patterns, changes, associations, and anomalies in massive databases), knowledge engineering, and wide spectrum of data mining application areas such as bioinformatics, e-commerce, environmental studies, financial markets, multimedia data pro- cessing, network monitoring, and social service anal- ysis. Letter grading.
M146. Introduction to Machine Learning. (4) (Same as Electrical and Computer Engineering M146.) Lec- ture, four hours; discussion, one hour; outside study, seven hours. Requisites: Civil and Environmental En- gineering 110 or Electrical and Computer Engineering 131A or Mathematics 170A or Statistics 100A, course 33. Introduction to breadth of data science. Founda- tions for modeling data sources, principles of opera- tion of common tools for data analysis, and applica- tion of tools and models to data gathering and anal- ysis. Topics include statistical foundations, regression, classification, kernel methods, clustering, expectation maximization, principal component anal- ysis, decision theory, reinforcement learning and deep learning. Letter grading.
M151B. Computer Systems Architecture. (4) (Same as Electrical and Computer Engineering M116C.) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisites: courses 33, and M51A or Electrical and Computer Engineering M16. Recom- mended: courses 111, and M152A or Electrical and Computer Engineering M116L. Computer system or- ganization and design, implementation of CPU data- path and control, instruction set design, memory hier- archy (caches, main memory, virtual memory) organi- zation and management, input/output subsystems (bus structures, interrupts, DMA), performance evalu- ation, pipelined processors. Letter grading.
M152A. Introductory Digital Design Laboratory. (2)
(Same as Electrical and Computer Engineering M116L.) Laboratory, four hours; outside study, two hours. Enforced requisite: course M51A or Electrical
and Computer Engineering M16. Hands-on design, implementation, and debugging of digital logic cir- cuits, use of computer-aided design tools for sche- matic capture and simulation, implementation of complex circuits using programmed array logic, de- sign projects. Letter grading.
152B. Digital Design Project Laboratory. (4) Labo- ratory, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course M151B or Electrical Engineering M116C. Recommended: Engi- neering 183EW or 185EW. Limited to seniors. Design and implementation of complex digital subsystems using field-programmable gate arrays (e.g., proces- sors, special-purpose processors, device controllers, and input/output interfaces). Students work in teams to develop and implement designs and to document and give oral presentations of their work. Letter grading.
161. Fundamentals of Artificial Intelligence. (4)
Lecture, four hours; laboratory, two hours; outside study, six hours. Enforced requisite: course 180. Intro- duction to fundamental problem solving and knowl- edge representation paradigms of artificial intelli- gence. Introduction to Lisp with regular programming assignments. State-space and problem reduction methods, brute-force and heuristic search, planning techniques, two-player games. Knowledge structures including predicate logic, production systems, se- mantic nets and primitives, frames, scripts. Special topics in natural language processing, expert sys- tems, vision, and parallel architectures. Letter grading.
168. Computational Methods for Medical Imaging. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: course 32 or Program in Computing 10C with grade of C– or better, Mathe- matics 33A, one course from Civil and Environmental Engineering 110, Electrical and Computer Engi- neering 131A, Mathematics 170A, or Statistics 100A. Theory and practice of image acquisition including angiography, computed tomography (CT), and mag- netic resonance (MR). Project-based course covers applied topics in medical imaging including image processing, atlasing, predictive modeling, personal- ized medicine, data driven and machine learning methods. Letter grading.
170A. Mathematical Modeling and Methods for Computer Science. (4) Lecture, four hours; labora- tory, two hours; outside study, six hours. Enforced requisites: course 180, Mathematics 33B. Introduc- tion to methods for modeling and simulation using in- teractive computing environments. Extensive cov- erage of methods for numeric and symbolic computa- tion, matrix algebra, statistics, floating point, optimization, and spectral analysis. Emphasis on ap- plications in simulation of physical systems. Letter grading.
M171L. Data Communication Systems Laboratory. (2 to 4) (Same as Electrical and Computer Engi- neering M171L.) Laboratory, four to eight hours; out- side study, two to four hours. Recommended prepa- ration: course M152A. Limited to seniors. Not open to students with credit for course M117. Interpretation of analog-signaling aspects of digital systems and data communications through experience in using contem- porary test instruments to generate and display sig- nals in relevant laboratory setups. Use of oscillo- scopes, pulse and function generators, baseband spectrum analyzers, desktop computers, terminals, modems, PCs, and workstations in experiments on pulse transmission impairments, waveforms and their spectra, modem and terminal characteristics, and in- terfaces. Letter grading.
172. Real-Time Three-Dimensional Animation. (4)
Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 32. Intro- duction to handling of geometry, appearance, and motion specifically for real-time virtual environments, both on theoretical and practical levels. Completion of one quality real-time three-dimensional animation by following through from preproduction to postproduc- tion. End products expected to be game demonstra- tions, storytelling games, or machinima (use of real- time graphics engines to create cinematic produc-
tions). Focus on achieving highest quality productions to qualify and submit products to Student Academy Awards competition. Use of Unity Game Engine to make technical decisions to adapt stories to games. Introduction to interaction concepts, enabling stu- dents to create low-fidelity real-time three-dimen- sional animation and to concepts in artificial intelli- gence, enabling them to refine their interactions to create high-fidelity real-time three-dimensional ani- mation. Letter grading.
174A. Introduction to Computer Graphics. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 32. Basic princi- ples behind modern two- and three-dimensional computer graphics systems, including complete set of steps that modern graphics pipelines use to create realistic images in real time. How to position and ma- nipulate objects in scene using geometric and camera transformations. How to create final image using per- spective and orthographic transformations. Basics of modeling primitives such as polygonal models and implicit and parametric surfaces. Basic ideas behind color spaces, illumination models, shading, and tex- ture mapping. Letter grading.
174B. Introduction to Computer Graphics: Three- Dimensional Photography and Rendering. (4) Lec- ture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 174A. State of art in three-dimensional photography and image- based rendering. How to use cameras and light to capture shape and appearance of real objects and scenes. Process provides simple way to acquire three-dimensional models of unparalleled detail and realism. Applications of techniques from entertain- ment (reverse engineering and postprocessing of movies, generation of realistic synthetic objects and characters) to medicine (modeling of biological struc- tures from imaging data), mixed reality (augmentation of video), and security (visual surveillance). Funda- mental analytical tools for modeling and inferring geo- metric (shape) and photometric (reflectance, illumina- tion) properties of objects and scenes, and for ren- dering and manipulating novel views. Letter grading. C174C. Computer Animation. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 174A. Designed for juniors/seniors. Introduction to computer animation, including basic principles of character modeling, for- ward and inverse kinematics, forward and inverse dy- namics, motion capture animation techniques, physics-based animation of particles and systems, and motor control. Concurrently scheduled with course C274C. Letter grading.
180. Introduction to Algorithms and Complexity. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisites: course 32, Mathematics 61. Designed for junior/senior Computer Science majors. Introduction to design and analysis of algorithms. Design techniques: divide-and-con- quer, greedy method, dynamic programming; selec- tion of prototypical algorithms; choice of data struc- tures and representations; complexity measures: time, space, upper, lower bounds, asymptotic com- plexity; NP-completeness. Letter grading.
181. Introduction to Formal Languages and Au- tomata Theory. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requi- site: course 180. Designed for junior/senior Computer Science majors. Grammars, automata, and lan- guages. Finite-state languages and finite-state au- tomata. Context-free languages and pushdown story automata. Unrestricted rewriting systems, recursively enumerable and recursive languages, and Turing ma- chines. Closure properties, pumping lemmas, and de- cision algorithms. Introduction to computability. Letter grading.
M182. Systems Biomodeling and Simulation Ba- sics. (4) (Same as Bioengineering M182.) Lecture, three hours; discussion, one hour; laboratory, two hours; outside study, six hours. Requisite: Mathe- matics 3B, 31B, or Life Sciences 30A. Recommended corequisite: Mathematics 3C, 32A, or Life Sciences 30B. Designed for undergraduate students in life sci- ences and engineering. Introduction to explicit mod-
Computer Science / 287

288 / Computer Science
eling and simulation of dynamic biological systems. Presentation of how biology, biochemistry, and physi- ology underlying dynamic systems biomodeling are transformed into system diagrams and graphs for re- fining conceptual understanding of their form and function. Structural models, formulated from basic conservation and mass action laws and feedback concepts, are further transformed into first-order dif- ferential equations, and implemented in simulation di- agrams for quantifying and exploring biosystem prop- erties. Examples show how to use these explicit models to gain clarity on nature of biosystem phe- nomena, and frame questions and explore new ideas for research. Letter grading.
183. Introduction to Cryptography. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Preparation: knowledge of basic probability theory. Enforced requisite: course 180. Introduction to cryptography, computer security, and basic concepts and techniques. Topics include notions of hardness, one-way functions, hard-core bits, pseudorandom generators, pseudorandom functions and pseudo- random permutations, semantic security, public-key and private-key encryption, key-agreement, homo- morphic encryption, private information retrieval and voting protocols, message authentication, digital sig- natures, interactive proofs, zero-knowledge proofs, collision-resistant hash functions, commitment proto- cols, and two-party secure computation with static security. Letter grading.
M184. Introduction to Computational and Systems Biology. (2) (Same as Bioengineering M184 and Computational and Systems Biology M184.) Lecture, two hours; outside study, four hours. Enforced requi- sites: one course from 31, Civil Engineering M20, Me- chanical and Aerospace Engineering M20, or Pro- gram in Computing 10A, and Mathematics 3B or 31B. Survey course designed to introduce students to computational and systems modeling and computa- tion in biology and medicine, providing motivation, flavor, culture, and cutting-edge contributions in com- putational biosciences and aiming for more informed basis for focused studies by students with computa- tional and systems biology interests. Presentations by individual UCLA researchers discussing their active computational and systems biology research. P/NP grading.
M185. Research Opportunities in Computational and Systems Biology. (4) (Same as Computational and Systems Biology M185.) Lecture, two hours; dis- cussion, two hours. Requisites: course M184, Mathe- matics 32B, 33A, 33B, Life Sciences 4. Introduction to interdisciplinary laboratory research methods and re- search opportunities in computational and systems biology to prepare and initiate students for active en- gagement in research. Presentation of potential proj- ects by faculty members and student visits to indi- vidual laboratories and participation in ongoing proj- ects. P/NP or letter grading.
CM186. Computational Systems Biology: Model- ing and Simulation of Biological Systems. (5) (Same as Bioengineering CM186, Computational and Systems Biology M186, and Ecology and Evolu- tionary Biology M178.) Lecture, four hours; laboratory, three hours; outside study, eight hours. Dynamic bio- systems modeling and computer simulation methods for studying biological/biomedical processes and sys- tems at multiple levels of organization. Control system, multicompartmental, predator-prey, pharma- cokinetic (PK), pharmacodynamic (PD), and other structural modeling methods applied to life sciences problems at molecular, cellular (biochemical path- ways/networks), organ, and organismic levels. Both theory- and data-driven modeling, with focus on translating biomodeling goals and data into mathe- matics models and implementing them for simulation and analysis. Basics of numerical simulation algo- rithms, with modeling software exercises in class and PC laboratory assignments. Concurrently scheduled with course CM286. Letter grading.
CM187. Research Communication in Computa- tional and Systems Biology. (4) (Same as Bioengi- neering CM187 and Computational and Systems Bi- ology M187.) Lecture, four hours; outside study, eight hours. Requisite: course CM186. Closely directed, in-
teractive, and real research experience in active quan- titative systems biology research laboratory. Direction on how to focus on topics of current interest in scien- tific community, appropriate to student interests and capabilities. Critiques of oral presentations and written progress reports explain how to proceed with search for research results. Major emphasis on effec- tive research reporting, both oral and written. Concur- rently scheduled with course CM287. Letter grading.
188. Special Courses in Computer Science. (4)
Lecture, four hours; discussion, two hours; outside study, six hours. Special topics in computer science for undergraduate students taught on experimental or temporary basis, such as those taught by resident and visiting faculty members. May be repeated for credit with topic or instructor change. Letter grading.
192A. Learning Assistant Pedagogy. (1 to 4) Sem- inar, one hour; outside study, two to 11 hours. Training seminar for advanced undergraduate students who are learning assistants (LAs) or peer learning facilita- tors (PLFs). Exploration of current topics in pedagogy and education research. Students work on communi- cation skills with constant assessment of and feed- back on progress. May be repeated for credit. Letter grading.
194. Research Group Seminars: Computer Sci- ence. (4) Seminar, four hours; outside study, eight hours. Designed for undergraduate students who are part of research group. Discussion of research methods and current literature in field or of research of faculty members or students. May be repeated for credit. Letter grading.
199. Directed Research in Computer Science. (2 to 8) Tutorial, to be arranged. Limited to juniors/seniors. Supervised individual research or investigation under guidance of faculty mentor. Culminating paper or project required. May be repeated for credit with school approval. Individual contract required; enroll- ment petitions available in Office of Academic and Student Affairs. Letter grading.
Graduate Courses
201. Computer Science Seminar. (2) Seminar, four hours; outside study, two hours. Designed for grad- uate computer science students. Seminars on current research topics in computer science. May be re- peated for credit. S/U grading.
202. Advanced Computer Science Seminar. (4)
Seminar, four hours; outside study, eight hours. Preparation: completion of major field examination in computer science. Current computer science re- search into theory of, analysis and synthesis of, and applications of information processing systems. Each member completes one tutorial and one or more orig- inal pieces of work in one specialized area. May be re- peated for credit. Letter grading.
tems software: middleware, file system, services, and applications, and (4) topical studies: energy-efficient design, security, location management, and quality of service. Letter grading.
212A. Queueing Systems Theory. (4) Lecture, four hours; outside study, eight hours. Requisites: course 112, Electrical Engineering 131A. Resource sharing issues and theory of queueing (waiting-line) systems. Review of Markov chains and baby queueing theory. Method of stages. M/Er /1. Er /M/1. Bulk arrival and bulk service systems. Series-parallel stages. Funda- mentals of open and closed queueing networks. Inter- mediate queueing theory: M/G/1; G/M/m. Collective marks. Advanced queueing theory: G/G/1; Lindley in- tegral equation; spectral solution. Inequalities, bounds, approximations. Letter grading.
M213A. Embedded Systems. (4) (Same
trical and Computer Engineering M202A.) Lecture, four hours; discussion, one hour; outside study, seven hours. Designed for graduate computer science and electrical engineering students. Methodologies and technologies for design of embedded systems. Topics include hardware and software platforms for embedded systems, techniques for modeling and specification of system behavior, software organiza- tion, real-time operating system scheduling, real-time communication and packet scheduling, low-power battery and energy-aware system design, timing syn- chronization, fault tolerance and debugging, and techniques for hardware and software architecture optimization. Theoretical foundations as well as prac- tical design methods. Letter grading.
M213B. Energy-Aware Computing and Cyber- Physical Systems. (4) (Same as Electrical and Com- puter Engineering M202B.) Lecture, four hours; out- side study, eight hours. Requisite: course M51A or Electrical and Computer Engineering M16. Recom- mended: courses 111, and M151B or Electrical and Computer Engineering M116C. System-level man- agement and cross-layer methods for power and en- ergy consumption in computing and communication at various scales ranging across embedded, mobile, personal, enterprise, and data-center scale. Com- puting, networking, sensing, and control technologies and algorithms for improving energy sustainability in human-cyber-physical systems. Topics include mod- eling of energy consumption, energy sources, and en- ergy storage; dynamic power management; power- performance scaling and energy proportionality; duty- cycling; power-aware scheduling; low-power proto- cols; battery modeling and management; thermal management; sensing of power consumption. Letter grading.
216. Network Algorithmics. (4) Lecture, four hours; outside study, eight hours. Recommended prepara- tion: one course on networks. Requisite: course 211. Introduction to algorithms for routers and servers. Models of network devices and hardware design. Principles for efficient implementation. Lookup algo- rithms (exact match, prefix lookups, advanced car- diac life support), fair queuing implementations, crossbar and scalable switches, with examples from well-known networking devices. Advanced topics in- clude traffic measurement and network security. Letter grading. Letter grading.
217A. Internet Architecture and Protocols. (4) Lec- ture, four hours; outside study, eight hours. Enforced requisite: course 118. Focus on mastering existing core set of Internet protocols, including IP, core trans- port protocols, routing protocols, DNS, NTP, and se- curity protocols such as DNSSEC, to understand principles behind design of these protocols, appre- ciate their design tradeoffs, and learn lessons from their operations. Letter grading.
217B. Advanced Topics in Internet Research. (4) Lecture, four hours; outside study, eight hours. En- forced requisite: course 217A. Designed for graduate students. Overview of Internet development history and fundamental principles underlying TCP/IP pro- tocol design. Discussion of current Internet research topics, including latest research results in routing pro- tocols, transport protocols, network measurements, network security protocols, and clean-slate approach
205. Health Analytics. (4) Lecture, four
side study, eight hours. Enforced requisites: courses 31, 180. Recommended: statistics and probability, numerical methods, knowledge in programming lan- guages. Applied data analytics course, with focus on healthcare applications. How to properly generate and analyze health data. Project-based course to learn about best practices in health data collection and validation. Exploration of various machine learning and data analytic tools to learn underlying structure of datasets to solve healthcare problems. Different machine learning concepts and algorithms, statistical models, and building of data-driven models. Big data analytics and tools for handling structured, unstructured, and semistructured data- sets. Letter grading.
211. Network Protocol and Systems Software De- sign for Wireless and Mobile Internet. (4) Lecture, four hours; outside study, eight hours. Requisite: course 118. Designed for graduate students. In-depth study of network protocol and systems software de- sign in area of wireless and mobile Internet. Topics in- clude (1) networking fundamentals: design philosophy of TCP/IP, end-to-end arguments, and protocol de- sign principles, (2) networking protocols: 802.11 MAC standard, packet scheduling, mobile IP, ad hoc routing, and wireless TCP, (3) mobile computing sys-
hours;
out-
as Elec-

to network architecture design. Fundamental issues in network protocol design and implementations. Letter grading.
218. Advanced Computer Networks. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 112, 118. Review of seven-layer ISO-OSI model. High-speed networks: LANs, MANs, ATM. Flow and congestion control; bandwidth allocation. Internetting. Letter grading. 219. Current Topics in Computer System Modeling Analysis. (4) Lecture, eight hours; outside study, four hours. Review of current literature in area of computer system modeling analysis in which instructor has de- veloped special proficiency as consequence of re- search interests. Students report on selected topics. May be repeated for credit with consent of instructor. Letter grading.
CM221. Introduction to Bioinformatics. (4) (Same as Bioinformatics M221, Chemistry CM260A, and Human Genetics M260A.) Lecture, four hours; discus- sion, two hours. Requisites: course 32 or Program in Computing 10C with grade of C– or better, and one course from Biostatistics 100A, Civil Engineering 110, Electrical Engineering 131A, Mathematics 170A, or Statistics 100A. Prior knowledge of biology not re- quired. Designed for engineering students as well as students from biological sciences and medical school. Introduction to bioinformatics and methodolo- gies, with emphasis on concepts and inventing new computational and statistical techniques to analyze biological data. Focus on sequence analysis and alignment algorithms. Concurrently scheduled with course CM121. S/U or letter grading.
CM222. Algorithms in Bioinformatics. (4) (Same as Bioinformatics M222 and Chemistry CM260B.) Lec- ture, four hours; discussion, two hours. Requisites: course 32 or Program in Computing 10C with grade of C– or better, and one course from Biostatistics 100A, Civil Engineering 110, Electrical Engineering 131A, Mathematics 170A, or Statistics 100A. Course CM221 is not requisite to CM222. Designed for engi- neering students as well as students from biological sciences and medical school. Development and ap- plication of computational approaches to biological questions, with focus on formulating interdisciplinary problems as computational problems and then solving these problems using algorithmic techniques. Computational techniques include those from statis- tics and computer science. Concurrently scheduled with course CM122. Letter grading.
CM224. Computational Genetics. (4) (Same as Bio- informatics M224 and Human Genetics CM224.) Lec- ture, four hours; discussion, two hours; outside study, six hours. Requisites: course 32 or Program in Com- puting 10C with grade of C– or better, Mathematics 33A, and one course from Civil Engineering 110, Elec- trical and Computer Engineering 131A, Mathematics 170A, or Statistics 100A. Designed for engineering students as well as students from biological sciences and medical school. Introduction to computational analysis of genetic variation and computational inter- disciplinary research in genetics. Topics include intro- duction to genetics, identification of genes involved in disease, inferring human population history, technolo- gies for obtaining genetic information, and genetic se- quencing. Focus on formulating interdisciplinary problems as computational problems and then solving those problems using computational tech- niques from statistics and computer science. Concur- rently scheduled with course CM124. Letter grading.
M225. Computational Methods in Genomics. (4)
(Same as Bioinformatics M225 and Human Genetics M265.) Lecture, two and one half hours; discussion, two and one half hours; outside study, seven hours. Introduction to computational approaches in bioinfor- matics, genomics, and computational genetics and preparation for computational interdisciplinary re- search in genetics and genomics. Topics include ge- nome analysis, regulatory genomics, association analysis, association study design, isolated and ad- mixed populations, population substructure, human structural variation, model organisms, and genomic
technologies. Computational techniques and methods include those from statistics and computer science. Letter grading.
M226. Machine Learning in Bioinformatics. (4) (Same as Bioinformatics M226 and Human Genetics M226.) Lecture, four hours; outside study, eight hours. Enforced requisite: course 32 or Program in Com- puting 10C with grade of C– or better. Recom- mended: one course from Biostatistics 100A, 110A, Civil Engineering 110, Electrical Engineering 131A, Mathematics 170A, or Statistics 100A. Familiarity with probability, statistics, linear algebra, and algorithms expected. Designed for engineering students as well as students from biological sciences and medical school. Biology has become data-intensive science. Bottleneck in being able to make sense of biological processes has shifted from data generation to statis- tical models and inference algorithms that can ana- lyze these datasets. Statistical machine learning pro- vides important toolkit in this endeavor. Biological datasets offer new challenges to field of machine learning. Examination of statistical and computational aspects of machine learning techniques and their ap- plication to key biological questions. Letter grading. M229S. Seminar: Current Topics in Bioinformatics. (4) (Same as Biological Chemistry M229S and Human Genetics M229S.) Seminar, four hours; outside study, eight hours. Designed for graduate engineering stu- dents as well as students from biological sciences and medical school. Introduction to current topics in bioinformatics, genomics, and computational ge- netics and preparation for computational interdisci- plinary research in genetics and genomics. Topics in- clude genome analysis, regulatory genomics, associ- ation analysis, association study design, isolated and admixed populations, population substructure, human structural variation, model organisms, and ge- nomic technologies. Computational techniques in- clude those from statistics and computer science. May be repeated for credit with topic change. Letter grading.
230. Software Engineering. (4) Lecture, four hours; discussion, two hours. Recommended preparation for undergraduate students: prior software engineering course. Required preparation for graduate students: undergraduate-level knowledge of data structures and object-oriented program languages. As software systems become increasingly large and complex, au- tomated software engineering analysis and develop- ment tools play important role in various software en- gineering tasks, such as design, construction, evolu- tion, and testing and debugging of software systems. Introduction to foundations, techniques, tools, and applications of automated software engineering tech- nology. Development, extension, and evaluation of mini automated software engineering analysis tool and assessment of how tool fits into software devel- opment process. Introduction to current research topics in automated software engineering. S/U or letter grading.
231. Types and Programming Languages. (4) Lec- ture, four hours; outside study, eight hours. Requisite: course 131. Introduction to static type systems and their usage in programming language design and software reliability. Operational semantics, simply- typed lambda calculus, type soundness proofs, types for mutable references, types for exceptions. Para- metric polymorphism, let-bound polymorphism, poly- morphic type inference. Types for objects, subtyping, combining parametric polymorphism and subtyping. Types for modules, parameterized modules. Formal specification and implementation of variety of type systems, as well as readings from recent research lit- erature on modern applications of type systems. Letter grading.
232. Static Program Analysis. (4) Lecture, four hours; outside study, eight hours. Requisite: course 132. Introduction to static analysis of object-oriented programs and its usage for optimization and bug finding. Class hierarchy analysis, rapid type analysis, equality-based analysis, subset-based analysis, flow- insensitive and flow-sensitive analysis, context-insen- sitive and context-sensitive analysis. Soundness proofs for static analyses. Efficient data structures for
static analysis information such as directed graphs and binary decision diagrams. Flow-directed method inlining, type-safe method inlining, synchronization optimization, deadlock detection, security vulnera- bility detection. Formal specification and implementa- tion of variety of static analyses, as well as readings from recent research literature on modern applica- tions of static analysis. Letter grading.
233A. Parallel Programming. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 111, 131. Mutual exclusion and resource allocation in dis- tributed systems; primitives for parallel computation: specification of parallelism, interprocess communica- tion and synchronization, atomic actions, binary and multiway rendezvous; synchronous and asynchro- nous languages: CSP, Ada, Linda, Maisie, UC, and others; introduction to parallel program verification. Letter grading.
233B. Verification of Concurrent Programs. (4)
Lecture, four hours; outside study, eight hours. Requi- site: course 233A. Formal techniques for verification of concurrent programs. Topics include safety, live- ness, program and state assertion-based techniques, weakest precondition semantics, Hoare logic, tem- poral logic, UNITY, and axiomatic semantics for se- lected parallel languages. Letter grading.
234. Computer-Aided Verification. (4) Lecture, four hours; outside study, eight hours. Requisite: course 181. Introduction to theory and practice of formal methods for design and analysis of concurrent and embedded systems, with focus on algorithmic tech- niques for checking logical properties of hardware and software systems. Topics include semantics of reactive systems, invariant verification, temporal logic model checking, theory of omega automata, state- space reduction techniques, compositional and hier- archical reasoning. Letter grading.
235. Advanced Operating Systems. (4) Lecture, four hours. Preparation: C or C++ programming experi- ence. Requisite: course 111. In-depth investigation of operating systems issues through guided construc- tion of research operating system for PC machines and consideration of recent literature. Memory man- agement and protection, interrupts and traps, pro- cesses, interprocess communication, preemptive multitasking, file systems. Virtualization, networking, profiling, research operating systems. Series of labo- ratory projects, including extra challenge work. Letter grading.
236. Computer Security. (4) Lecture, four hours; out- side study, eight hours. Requisites: courses 111, 118. Basic and research material on computer security. Topics include basic principles and goals of computer security, common security tools, use of cryptographic protocols for security, security tools (firewalls, virtual private networks, honeypots), virus and worm protec- tion, security assurance and testing, design of secure programs, privacy, applying security principles to real- istic problems, and new and emerging threats and se- curity tools. Letter grading.
C237A. Prototyping Programming Languages. (4)
Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 131. How different programming language paradigms provide dramatically different ways of thinking about compu- tation and offer trade-offs on many dimensions, such as modularity, extensibility, expressiveness, and safety. Concrete exploration of three major program- ming paradigms—functional, object-oriented, and logic programming—by prototyping implementations of languages in each. Analysis of prototypes to shed light on design and structural properties of each lan- guage and paradigm and to allow easy comparison against one another. Hands-on experience imple- menting new abstractions, both as stand-alone lan- guages and as libraries in existing languages. Con- currently scheduled with course C137A. Letter grading.
C237B. Programming Language Design. (4) Sem- inar, four hours; outside study, eight hours. Enforced requisite: course C237A. Study of various program- ming language designs, from computing history and research literature, that attempt to address problems of software systems that are bloated, buggy, and diffi-
Computer Science / 289

290 / Computer Science
cult to maintain and extend despite trend in com- puting toward ever higher levels of abstraction for programming. Hands-on experience designing, pro- totyping, and evaluating new languages, language abstractions, and/or programming environments. Concurrently scheduled with course C137B. Letter grading.
239. Current Topics in Computer Science: Pro- gramming Languages and Systems. (2 to 12) Lec- ture, four hours; outside study, eight hours. Review of current literature in area of computer science pro- gramming languages and systems in which instructor has developed special proficiency as consequence of research interests. May be repeated for credit with topic change. Letter grading.
240A. Databases and Knowledge Bases. (4) Lec- ture, four hours; outside study, eight hours. Requisite: course 143. Theoretical and technological foundation of Intelligent Database Systems, that merge database technology, knowledge-based systems, and ad- vanced programming environments. Rule-based knowledge representation, spatio-temporal rea- soning, and logic-based declarative querying/pro- gramming are salient features of this technology. Other topics include object-relational systems and data mining techniques. Letter grading.
240B. Advanced Data and Knowledge Bases. (4)
Lecture, four hours; outside study, eight hours. Requi- sites: courses 143, 240A. Logical models for data and knowledge representations. Rule-based languages and nonmonotonic reasoning. Temporal queries, spa- tial queries, and uncertainty in deductive databases and object relational databases (ORDBs). Abstract data types and user-defined column functions in ORDBs. Data mining algorithms. Semistructured in- formation. Letter grading.
241B. Pictorial and Multimedia Database Manage- ment. (4) Lecture, three and one half hours; discus- sion, 30 minutes; laboratory, one hour; outside study, seven hours. Requisite: course 143. Multimedia data: alphanumeric, long text, images/pictures, video, and voice. Multimedia information systems requirements. Data models. Searching and accessing databases and across Internet by alphanumeric, image, video, and audio content. Querying, visual languages, and communication. Database design and organization, logical and physical. Indexing methods. Internet mul- timedia streaming. Other topics at discretion of in- structor. Letter grading.
244A. Distributed Database Systems. (4) Lecture, four hours; outside study, eight hours. File allocation, intelligent directory design, transaction management, deadlock, strong and weak concurrency control, commit protocols, semantic query answering, multi- database systems, fault recovery techniques, network partitioning, examples, trade-offs, and design experi- ences. Letter grading.
245. Big Data Analytics. (4) Lecture, four hours; out- side study, eight hours. Requisites: courses 143 or 180 or equivalent. With unprecedented rate at which data is being collected today in almost all fields of human endeavor, there is emerging economic and scientific need to extract useful information from it. Data analytics is process of automatic discovery of patterns, changes, associations, and anomalies in massive databases, and is highly inter-disciplinary field representing confluence of several disciplines, including database systems, data warehousing, data mining, machine learning, statistics, algorithms, data visualization, and cloud computing. Survey of main topics in big data analytics and latest advances, as well as wide spectrum of applications such as bioin- formatics, E-commerce, environmental study, finan- cial market study, multimedia data processing, net- work monitoring, social media analysis. Letter grading.
246. Web Information Management. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 112, 143, 180, 181. Designed for graduate students. Scale of Web data requires novel algorithms and principles for their management and retrieval. Study of Web characteristics and new management techniques needed to build computer systems suit- able for Web environment. Topics include Web mea-
suring techniques, large-scale data mining algo- rithms, efficient page refresh techniques, Web-search ranking algorithms, and query processing techniques on independent data sources. Letter grading.
249. Current Topics in Data Structures. (2 to 12)
Lecture, four hours; outside study, eight hours. Re- view of current literature in area of data structures in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with consent of instructor. Letter grading.
251A. Advanced Computer Architecture. (4) Lec- ture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 111. Design and implementation of high-performance systems, advanced memory hierarchy techniques, static and dynamic pipelining, superscalar and VLIW proces- sors, branch prediction, speculative execution, soft- ware support for instruction-level parallelism, simula- tion-based performance analysis and evaluation, state-of-art design examples, introduction to parallel architectures. Letter grading.
251B. Parallel Computer Architectures. (4) Lec- ture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 251A. SIMD and MIMD systems, symmetric multiprocessors, dis- tributed-shared-memory systems, messages-passing systems, multicore chips, clusters, interconnection networks, host-network interfaces, switching element design, communication primitives, cache coherency, memory consistency models, synchronization primi- tives, state-of-art design examples. Letter grading. 252A. Arithmetic Algorithms and Processors. (4) Lecture, four hours; outside study, eight hours. Requi- site: course 251A. Number systems: conventional, re- dundant, signed-digit, and residue. Types of algo- rithms and implementations. Complexity measures. Fast algorithms and implementations for two-operand addition, multioperand addition, multiplication, divi- sion, and square root. Online arithmetic. Evaluation of transcendental functions. Floating-point arithmetic and numerical error control. Arithmetic error codes. Residue arithmetic. Examples of contemporary arith- metic ICs and processors. Letter grading.
256A. Advanced Scalable Architectures. (4) Lec- ture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 251A. State- of-art scalable multiprocessors. Interdependency among implementation technology, chip microarchi- tecture, and system architecture. High-performance building blocks, such as chip multiprocessors (CMPs). On-chip and off-chip communication. Mech- anisms for exploiting parallelism at multiple levels. Current research areas. Examples of chips and sys- tems. Letter grading.
M258A. Design of VLSI Circuits and Systems. (4) (Same as Electrical and Computer Engineering M216A.) Lecture, four hours; discussion, two hours; laboratory, four hours; outside study, two hours. Req- uisites: course M51A or Electrical and Computer En- gineering M16, and Electrical and Computer Engi- neering 115A. Recommended: Electrical and Com- puter Engineering 115C. LSI/VLSI design and application in computer systems. Fundamental de- sign techniques that can be used to implement com- plex integrated systems on chips. Letter grading. M258C. LSI in Computer System Design. (4) (Same as Electrical and Computer Engineering M216C.) Lec- ture, four hours; laboratory, four hours; outside study, four hours. Requisite: course M258A. LSI/VLSI design and application in computer systems. In-depth studies of VLSI architectures and VLSI design tools. Letter grading.
258F. Physical Design Automation of VLSI Sys- tems.(4)Lecture, four hours; outside study, eight hours. Detailed study of various physical design auto- mation problems of VLSI circuits, including logic par- titioning, floorplanning, placement, global routing, channel and switchbox routing, planar routing and via minimization, compaction and performance-driven layout. Discussion of applications of number of im- portant optimization techniques, such as network flows, Steiner trees, simulated annealing, and generic algorithms. Letter grading.
258G. Logic Synthesis of Digital Systems. (4) Lec- ture, four hours; outside study, eight hours. Requi- sites: courses M51A, 180. Detailed study of various problems in logic-level synthesis of VLSI digital sys- tems, including two-level Boolean network optimiza- tion; multilevel Boolean network optimization; tech- nology mapping for standard cell designs and field- programmable gate-array (FPGA) designs; retiming for sequential circuits; and applications of binary de- cision diagrams (BDDS). Letter grading.
258H. Analysis and Design of High-Speed VLSI In- terconnects. (4) Lecture, four hours; outside study, eight hours. Requisites: courses M258A, 258F. De- tailed study of various problems in analysis and de- sign of high-speed VLSI interconnects at both inte- grated circuit (IC) and packing levels, including inter- connect capacitance and resistance, lossless and lossy transmission lines, cross-talk and power distri- bution noise, delay models and power dissipation models, interconnect topology and geometry optimi- zation, and clocking for high-speed systems. Letter grading.
259. Current Topics in Computer Science: System Design/Architecture. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer science system design in which instructor has developed special proficiency as con- sequence of research interests. Students report on selected topics. May be repeated for credit with topic change. Letter grading.
260. Machine Learning Algorithms. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Recommended requisite: course 180. Prob- lems of identifying patterns in data. Machine learning allows computers to learn potentially complex pat- terns from data and to make decisions based on these patterns. Introduction to fundamentals of this discipline to provide both conceptual grounding and practical experience with several learning algorithms. Techniques and examples used in areas such as healthcare, financial systems, commerce, and social networking. Letter grading.
261A. Problem Solving and Search. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. In-depth treatment of systematic problem-solving search algorithms in artificial intelli- gence, including problem spaces, brute-force search, heuristic search, linear-space algorithms, real-time search, heuristic evaluation functions, two-player games, and constraint-satisfaction problems. Letter grading.
262A. Learning and Reasoning with Bayesian Net- works. (4) Lecture, four hours; outside study, eight hours. Requisite: course 112 or Electrical Engineering 131A. Review of several formalisms for representing and managing uncertainty in reasoning systems; pre- sentation of comprehensive description of Bayesian inference using belief networks representation. Letter grading.
M262C. Current Topics in Causal Modeling, Infer- ence, and Reasoning. (4) (Same as Statistics M241.) Lecture, four hours; outside study, eight hours. Requi- site: one graduate probability or statistics course such as course 262A, Statistics 200B, or 202B. Re- view of Bayesian networks, causal Bayesian net- works, and structural equations. Learning causal structures from data. Identifying causal effects. Co- variate selection and instrumental variables in linear and nonparametric models. Simpson paradox and confounding control. Logic and algorithmization of counterfactuals. Probabilities of counterfactuals. Di- rect and indirect effects. Probabilities of causation. Identifying causes of events. Letter grading.
262Z. Current Topics in Cognitive Systems. (4)
Lecture, four hours; outside study, eight hours. Requi- site: course 262A. Additional requisites for each of- fering announced in advance by department. Theory and implementation of systems that emulate or sup- port human reasoning. Current literature and indi- vidual studies in artificial intelligence, knowledge- based systems, decision support systems, computa- tional psychology, and heuristic programming theory. May be repeated for credit with topic change. Letter grading.

263A. Language and Thought. (4) Lecture, four hours; outside study, eight hours. Requisite: course 130 or 131 or 161. Introduction to natural language processing (NLP), with emphasis on semantics. Pre- sentation of process models for variety of tasks, in- cluding question answering, paraphrasing, machine translation, word-sense disambiguation, narrative and editorial comprehension. Examination of both sym- bolic and statistical approaches to language pro- cessing and acquisition. Letter grading.
263C. Animats-Based Modeling. (4) Lecture, four hours; outside study, eight hours. Requisite: course 130 or 131 or 161. Animats are mobile/sensing an- imal-like software agents embedded in simulated dy- namic environments. Emphasis on modeling: goal- oriented behavior via neurocontrollers, adaptation via reinforcement learning, evolutionary programming. Animat-based tasks include foraging, mate finding, predation, navigation, predator avoidance, coopera- tive nest construction, communication, and parenting. Letter grading.
264A. Automated Reasoning: Theory and Applica- tions. (4) Lecture, four hours; laboratory, four hours; outside study, four hours. Requisite: course 161. In- troduction to theory and practice of automated rea- soning using propositional and first-order logic. Topics include syntax and semantics of formal logic; algorithms for logical reasoning, including satisfiability and entailment; syntactic and semantic restrictions on knowledge bases; effect of these restrictions on ex- pressiveness, compactness, and computational trac- tability; applications of automated reasoning to diag- nosis, planning, design, formal verification, and reli- ability analysis. Letter grading.
hours. Designed for graduate students. Computa- tional aspects of processing visual and other sensory information. Unified treatment of early vision in man and machine. Integration of symbolic and iconic rep- resentations in process of image segmentation. Com- puting multimodal sensory information by neural-net architectures. Letter grading.
268S. Seminar: Computational Neuroscience. (2)
Seminar, two hours; outside study, four hours. De- signed for students undertaking thesis research. Dis- cussion of advanced topics and current research in computational neuroscience. Neural networks and connectionism as paradigm for parallel and concur- rent computation in application to problems of per- ception, vision, multimodal sensory integration, and robotics. May be repeated for credit. S/U grading. 269. Seminar: Current Topics in Artificial Intelli- gence. (4) Seminar, to be arranged. Review of current literature and research practicum in area of artificial intelligence in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with topic change. Letter grading.
C274C. Computer Animation. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 174A. Introduction to computer animation, including basic principles of character modeling, forward and inverse kinematics, forward and inverse dynamics, motion capture anima- tion techniques, physics-based animation of particles and systems, and motor control. Concurrently sched- uled with course C174C. Letter grading.
275. Artificial Life for Computer Graphics and Vi- sion. (4) Lecture, four hours; outside study, eight hours. Enforced requisite: course 174A. Recom- mended: course 161. Investigation of important role that concepts from artificial life, emerging discipline that spans computational and biological sciences, can play in construction of advanced computer graphics and vision models for virtual reality, anima- tion, interactive games, active vision, visual sensor networks, medical image analysis, etc. Focus on comprehensive models that can realistically emulate variety of living things (plants and animals) from lower animals to humans. Exposure to effective computa- tional modeling of natural phenomena of life and their incorporation into sophisticated, self-animating graphical entities. Specific topics include modeling plants using L-systems, biomechanical simulation and control, behavioral animation, reinforcement and neural-network learning of locomotion, cognitive modeling, artificial animals and humans, human facial animation, and artificial evolution. Letter grading.
M276A. Pattern Recognition and Machine Learn- ing. (4) (Same as Statistics M231.) Lecture, three hours; discussion, one hour. Designed for graduate students. Fundamental concepts, theories, and algo- rithms for pattern recognition and machine learning that are used in computer vision, image processing, speech recognition, data mining, statistics, and com- putational biology. Topics include Bayesian decision theory, parametric and nonparametric learning, clus- tering, complexity (VC-dimension, MDL, AIC), PCA/ ICA/TCA, MDS, SVM, boosting. S/U or letter grading.
280A-280ZZ. Algorithms. (4 each) Lecture, four hours; outside study, eight hours. Requisite: course 180. Additional requisites for each offering announced in advance by department. Selections from design, analysis, optimization, and implementation of algo- rithms; computational complexity and general theory of algorithms; algorithms for particular application areas. Subtitles of some current sections: Principles of Design and Analysis (280A); Distributed Algorithms (280D); Graphs and Networks (280G). May be re- peated for credit with consent of instructor and topic change. Letter grading:
280AP. Approximation Algorithms. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. Background in discrete mathematics helpful. Theoretically sound techniques for dealing with NP- Hard problems. Inability to solve these problems effi- ciently means algorithmic techniques are based on approximation—finding solution that is near to best possible in efficient running time. Coverage of ap-
proximation techniques for number of different prob- lems, with algorithm design techniques that include primal-dual method, linear program rounding, greedy algorithms, and local search. Letter grading.
281A. Computability and Complexity. (4) Lecture, four hours; outside study, eight hours. Requisite: course 181 or compatible background. Concepts fun- damental to study of discrete information systems and theory of computing, with emphasis on regular sets of strings, Turing-recognizable (recursively enu- merable) sets, closure properties, machine characteri- zations, nondeterminisms, decidability, unsolvable problems, “easy” and “hard” problems, PTIME/NP- TIME. Letter grading.
M282A. Cryptography. (4) (Same as Mathematics M209A.) Lecture, four hours; outside study, eight hours. Introduction to theory of cryptography, stressing rigorous definitions and proofs of security. Topics include notions of hardness, one-way func- tions, hard-core bits, pseudorandom generators, pseudorandom functions and pseudorandom permu- tations, semantic security, public-key and private-key encryption, secret-sharing, message authentication, digital signatures, interactive proofs, zero-knowledge proofs, collision-resistant hash functions, commit- ment protocols, key-agreement, contract signing, and two-party secure computation with static security. Letter grading.
M282B. Cryptographic Protocols. (4) (Same as Mathematics M209B.) Lecture, four hours; outside study, eight hours. Requisite: course M282A. Consid- eration of advanced cryptographic protocol design and analysis. Topics include noninteractive zero- knowledge proofs; zero-knowledge arguments; con- current and non-black-box zero-knowledge; IP=PSPACE proof, stronger notions of security for public-key encryption, including chosen-ciphertext security; secure multiparty computation; dealing with dynamic adversary; nonmalleability and compos- ability of secure protocols; software protection; threshold cryptography; identity-based cryptog- raphy; private information retrieval; protection against man-in-middle attacks; voting protocols; identification protocols; digital cash schemes; lower bounds on use of cryptographic primitives, software obfuscation. May be repeated for credit with topic change. Letter grading.
M283A-M283B. Topics in Applied Number Theory. (4–4) (Same as Mathematics M208A-M208B.) Lec- ture, three hours. Basic number theory, including con- gruences and prime numbers. Cryptography: public- key and discrete log cryptosystems. Attacks on cryp- tosystems. Primality testing and factorization methods. Elliptic curve methods. Topics from coding theory: Hamming codes, cyclic codes, Gilbert/Var- shamov bounds, Shannon theorem. S/U or letter grading.
284A-284ZZ. Topics in Automata and Languages. (4 each) Lecture, four hours; outside study, eight hours. Requisite: course 181. Additional requisites for each offering announced in advance by department. Selections from families of formal languages, gram- mars, machines, operators; pushdown automata, context-free languages and their generalizations, parsing; multidimensional grammars, developmental systems; machine-based complexity. Subtitles of some current and planned sections: Context-Free Languages (284A), Parsing Algorithms (284P). May be repeated for credit with consent of instructor and topic change. Letter grading.
CM286. Computational Systems Biology: Model- ing and Simulation of Biological Systems. (5) (Same as Bioengineering CM286.) Lecture, four hours; laboratory, three hours; outside study, eight hours. Dynamic biosystems modeling and computer simulation methods for studying biological/biomed- ical processes and systems at multiple levels of orga- nization. Control system, multicompartmental, pred- ator-prey, pharmacokinetic (PK), pharmacodynamic (PD), and other structural modeling methods applied to life sciences problems at molecular, cellular (bio- chemical pathways/networks), organ, and organismic levels. Both theory- and data-driven modeling, with focus on translating biomodeling goals and data into
265A. Machine Learning. (4) Lecture,
outside study, eight hours. Requisites: courses 263A, 264A. Introduction to machine learning. Learning by analogy, inductive learning, modeling creativity, learning by experience, role of episodic memory orga- nization in learning. Examination of BACON, AM, Eu- risko, HACKER, teachable production systems. Failure-driven learning. Letter grading.
M266A. Statistical Modeling and Learning in Vision and Cognition. (4) (Same as Statistics M232A.) Lec- ture, three hours. Preparation: basic statistics, linear algebra (matrix analysis), computer vision. Computer vision and pattern recognition. Study of four types of statistical models for modeling visual patterns: de- scriptive, causal Markov, generative (hidden Markov), and discriminative. Comparison of principles and al- gorithms for these models; presentation of unifying picture. Introduction of minimax entropy and EM-type and stochastic algorithms for learning. S/U or letter grading.
M266B. Statistical Computing and Inference in Vi- sion and Cognition. (4) (Same as Statistics M232B.) Lecture, three hours. Preparation: basic statistics, lin- ear algebra (matrix analysis), computer vision. Intro- duction to broad range of algorithms for statistical in- ference and learning that could be used in vision, pat- tern recognition, speech, bioinformatics, data mining. Topics include Markov chain Monte Carlo computing, sequential Monte Carlo methods, belief propagation, partial differential equations. S/U or letter grading. 267A. Probabilistic Programming and Relational Learning. (4) Lecture, four hours; outside study, eight hours. Introduction to computational models of prob- ability and statistical models of relational data. Study of relational representations such as probabilistic da- tabases, relational graphical models, and Markov logic networks, as well as various probabilistic pro- gramming languages. Covers their syntax and se- mantics, probabilistic inference problems, parameter, and structure learning algorithms, and theoretical properties of representation and inference. Expressive statistical modeling, how to formalize and reason about complex statistical assumptions and encode knowledge in machine learning models. Survey of key applications in natural language processing, graph mining, computer vision, and computational biology. Letter grading.
M268. Machine Perception. (4) (Same as Electrical and Computer Engineering M206.) Lecture, four hours; discussion, two hours; outside study, six
four hours;
Computer Science / 291

292 / Conservation of Archaeological and Ethnographic Materials
mathematics models and implementing them for sim- ulation and analysis. Basics of numerical simulation algorithms, with modeling software exercises in class and PC laboratory assignments. Concurrently sched- uled with course CM186. Letter grading.
CM287. Research Communication in Computa- tional and Systems Biology. (4) (Same as Bioengi- neering CM287.) Lecture, four hours; outside study, eight hours. Requisite: course CM286. Closely di- rected, interactive, and real research experience in active quantitative systems biology research labora- tory. Direction on how to focus on topics of current in- terest in scientific community, appropriate to student interests and capabilities. Critiques of oral presenta- tions and written progress reports explain how to pro- ceed with search for research results. Major emphasis on effective research reporting, both oral and written. Concurrently scheduled with course CM187. Letter grading.
288S. Seminar: Theoretical Computer Science. (2)
Seminar, two hours; outside study, six hours. Requi- sites: courses 280A, 281A. Intended for students un- dertaking thesis research. Discussion of advanced topics and current research in such areas as algo- rithms and complexity models for parallel and concur- rent computation, and formal language and automata theory. May be repeated for credit. S/U grading. 289A-289ZZ. Current Topics in Computer Theory. (2 to 12 each) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer theory in which instructor has developed special proficiency as consequence of research inter- ests. Students report on selected topics. Letter grading:
289CO. Complexity Theory. (4). Lecture, four hours; outside study, eight hours. Diagonalization, polyno- mial-time hierarchy, PCP theorem, randomness and de-randomization, circuit complexity, attempts and limitations to proving P does not equal NP, average- case complexity, one-way functions, hardness ampli- fication. Problem sets and presentation of previous and original research related to course topics. Letter grading.
289OA. Online Algorithms. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. In- troduction to decision making under uncertainty and competitive analysis. Review of current research in online algorithms for problems arising in many areas, such as data and memory management, searching and navigating in unknown terrains, and server sys- tems. Letter grading.
289RA. Randomized Algorithms. (4) Lecture, four hours; outside study, eight hours. Basic concepts and design techniques for randomized algorithms, such as probability theory, Markov chains, random walks, and probabilistic method. Applications to randomized algorithms in data structures, graph theory, computa- tional geometry, number theory, and parallel and dis- tributed systems. Letter grading.
M296A. Advanced Modeling Methodology for Dy- namic Biomedical Systems. (4) (Same as Bioengi- neering M296A and Medicine M270C.) Lecture, four hours; outside study, eight hours. Requisite: Electrical Engineering 141 or 142 or Mathematics 115A or Me- chanical and Aerospace Engineering 171A. Develop- ment of dynamic systems modeling methodology for physiological, biomedical, pharmacological, chem- ical, and related systems. Control system, multicom- partmental, noncompartmental, and input/output models, linear and nonlinear. Emphasis on model ap- plications, limitations, and relevance in biomedical sciences and other limited data environments. Problem solving in PC laboratory. Letter grading. M296B. Optimal Parameter Estimation and Experi- ment Design for Biomedical Systems. (4) (Same as Bioengineering M296B, Biomathematics M270, and Medicine M270D.) Lecture, four hours; outside study, eight hours. Requisite: course CM286 or M296A or Biomathematics 220. Estimation methodology and model parameter estimation algorithms for fitting dy- namic system models to biomedical data. Model dis- crimination methods. Theory and algorithms for de- signing optimal experiments for developing and quan- tifying models, with special focus on optimal sampling
schedule design for kinetic models. Exploration of PC software for model building and optimal experiment design via applications in physiology and pharma- cology. Letter grading.
M296C. Advanced Topics and Research in Bio- medical Systems Modeling and Computing. (4) (Same as Bioengineering M296C and Medicine M270E.) Lecture, four hours; outside study, eight hours. Requisite: course M296B. Research tech- niques and experience on special topics involving models, modeling methods, and model/computing in biological and medical sciences. Review and critique of literature. Research problem searching and formu- lation. Approaches to solutions. Individual MS- and PhD-level project training. Letter grading.
M296D. Introduction to Computational Cardiology. (4) (Same as Bioengineering M296D.) Lecture, four hours; outside study, eight hours. Requisite: course CM186. Introduction to mathematical modeling and computer simulation of cardiac electrophysiological process. Ionic models of action potential (AP). Theory of AP propagation in one-dimensional and two-di- mensional cardiac tissue. Simulation on sequential and parallel supercomputers, choice of numerical al- gorithms, to optimize accuracy and to provide com- putational stability. Letter grading.
298. Research Seminar: Computer Science. (2 to 4) Seminar, two to four hours; outside study, four to eight hours. Designed for graduate computer science students. Discussion of advanced topics and current research in algorithmic processes that describe and transform information: theory, analysis, design, effi- ciency, implementation, and application. May be re- peated for credit. S/U grading.
375. Teaching Apprentice Practicum. (1 to 4) Sem- inar, to be arranged. Preparation: apprentice per- sonnel employment as teaching assistant, associate, or fellow. Teaching apprenticeship under active guid- ance and supervision of regular faculty member re- sponsible for curriculum and instruction at UCLA. May be repeated for credit. S/U grading.
495. Teaching Assistant Training Seminar. (2) Sem- inar, four hours; outside study, two hours. Limited to graduate Computer Science Department students. Seminar on being effective teaching assistant, in- cluding preparation, classroom presentation, encour- aging interactive discussion, active learning, office hours, review sessions, making up and grading as- signments and exam questions, proctoring exams, and grading. S/U grading.
495B. Teaching with Technology. (2) Seminar, two hours; outside study, four hours. Limited to graduate Computer Science Department teaching assistants. Seminar for teaching assistants covering how tech- nology can be used to aid instruction in and out of classroom. S/U grading.
497D-497E. Field Projects in Computer Science. (4–4) Fieldwork, to be arranged. Students are divided into teams led by instructor; each team is assigned one external company or organization that they inves- tigate as candidate for possible computerization, sub- mitting team report of their findings and recommen- dations. In Progress (497D) and S/U or letter (497E) grading.
596. Directed Individual or Tutorial Studies. (1 to 8)
Tutorial, to be arranged. Limited to graduate com- puter science students. Petition forms to request en- rollment may be obtained from assistant dean, Grad- uate Studies. Supervised investigation of advanced technical problems. S/U grading.
597A. Preparation for MS Comprehensive Exam- ination. (2 to 12) Tutorial, to be arranged. Limited to graduate computer science students. Reading and preparation for MS comprehensive examination. S/U grading.
597B. Preparation for PhD Preliminary Examina- tions. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Preparation for PhD preliminary examinations. S/U grading.
597C. Preparation for PhD Oral Qualifying Exam- ination. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Preparation for oral qualifying examination, including preliminary re- search on dissertation. S/U grading.
598. Research for and Preparation of MS Thesis. (2 to 12) Tutorial, to be arranged. Limited to graduate computer science students. Supervised independent research for MS candidates, including thesis pro- spectus. S/U grading.
599. Research for and Preparation of PhD Disser- tation. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Petition forms to request enrollment may be obtained from assistant dean, Graduate Studies. S/U grading.
