5AA-ZZ. Introduction to Computer Programming
(4) STAFF
Not open for credit to students who have com- pleted Computer Science 10 or Engineering 3. May not be repeated with a different suffix.
Introduction to programming and the organiza- tion of computers. Basic programming concepts, algorithms, data and control structures, debugging,
program design, documentation, structured program- ming.
10. Computer Programming (4) GONZALEZ, SU
Prerequisite: Mathematics 3A.
Students with no prior programming background are encouraged to take Computer Science 5JA before 10.
Introduction to programming and computers. Basic programming concepts: algorithms, data and control structures, debugging, program design, documen- tation, structured programming, object oriented programming.
11AA-ZZ. Programming Language Laboratory
(1) STAFF
Different sections may be repeated. Sections not always offered.
Recommended preparation: knowledge of at least one programming language.
A self-paced course to allow a student who already possesses a working knowledge of at least one programming language an opportunity to learn other languages of interest.
12. Programming Methods in C
(4) GONZALEZ
Prerequisites: Computer Science 5 or 10 or Engineer- ing 3.
Not open for credit to computer science majors or pre-majors. Not open for credit to students who have completed Computer Science 11C, 22, or 60.
Introduction to the UNIX system, C program- ming language, and data structures. Topics include: introduction to the UNIX system, C shell and shell scripts; UNIX file system and utilities; stacks, queues, lists, and trees.
20. Programming Methods
(4) SINGH
Prerequisite: Computer Science 10 and Mathematics 3B.
Programming techniques as follows: specification, representation, and manipulation of basic data struc- tures such as stacks, queues, lists, trees, sets, arrays, etc. Searching and sorting techniques; predicate logic and program correctness; induction and recursion; running time analysis. Students write several medium- sized object-oriented programs.
30. Introduction to Computer Systems
(4) SHERWOOD
Prerequisite: Engineering 3 or Computer Science 5AA- ZZ or 10; and, Mathematics 3C.
Not open for credit to students who have com- pleted ECE 15 or 15B.
Basic computer organization, assembly language programming.Gates, combinational circuits, flip-flops and the design and analysis of sequential circuits.
40. Foundations of Computer Science
(4) SU
Prerequisites: Computer Science 10 or 12; and Math- ematics 3C.
Propositional predicate logic, set theory, functions and relations, counting, mathematical induction and recursion (generating functions).
50. Programming Project
(4) CAPPELLO
Prerequisites: Computer Science 10 and 20.
Program design (modularization, designing for changeability, robustness, and testability), basic soft- ware engineering practices, principles of user interface design. Students design, implement, and test one or two extensive object-oriented programs.
60. Introduction to C, C++, and UNIX (4) SU
Prerequisite: Computer Science 20.
Reduced credit of 2 units will be given to students who have completed Computer Science 12.
Syntax and semantics of C and C++. Introduction to basic UNIX utilities and tools. Students complete several small projects that exercise their understanding of the material presented in class.
Upper DivisioN
109A. Introduction to Mathematical Logic (4) STAFF
Prerequisites: Mathematics 8 or Computer
Science 40.
Same course as Mathematics 109A.
An introduction to mathematical logic with applica- tions in computer science and mathematics. Topics include propositional and predicate calculi; models; proof systems; decidability and undecidability; auto- mated theorem-proving; unification; logic program- ming; and program verification.
111. Introduction to Computational Science
(4) PETZOLD
Prerequisites: Mathematics 5B; and, Computer Science 12 or 60.
Not open for credit to students who have com- pleted Computer Science 110A.
Introduction to computational science, emphasizing basic numerical algorithms and the informed use of mathematical software. Matrix computation, systems of linear and nonlinear equations, interpolation and zero finding, differential equations, numerical integra- tion. Students learn and use the Matlab language.
123. Overview of Computer Systems: Hardware and Software
(4) EL ABBADI
Prerequisite: Computer Science 20.
Not open for credit to students who have com- pleted Computer Science 30 or Computer Science 170. Basic computer architecture: CPU, memory, I/O.
Basic operating systems concepts: processes, synchro- nization, memory management, virtual memory, file systems.
130A. Data Structures and Algorithms I (4) GONZALEZ
Prerequisites: Computer Science 20, 40 and 60; Com- puter Science 30 or ECE 15A-B; PSTAT 120A or ECE 139; open to computer science, computer engineer- ing, and electrical engineering majors only.
The study of data structures and applications. Correctness proofs and techniques for the design of correct programs. Internal and external searching. Hashing and height balanced trees. Analysis of sorting algorithms. Memory management. Graph traversal techniques and their applications.
130B. Data Structures and Algorithms II (4) GONZALEZ
Prerequisites: Computer Science 40 and 130A.
Design and analysis of computer algorithms. Correctness proofs and solution of recurrence rela- tions. Design techniques: divide and conquer, greedy strategies, dynamic programming, branch and bound, backtracking, and local search. Applications of techniques to problems from several disciplines. NP
- completeness.
138. Automata and Formal Languages
(4) EGECIOGLU
Prerequisites: Computer Science 40; open to computer science and computer engineering majors only.
Not open for credit to students who have com- pleted Computer Science 136.
Formal languages; finite automata and regular ex- pressions; properties of regular languages; pushdown automata and context-free grammars; properties of context-free languages; introduction to computability and unsolvability (Turing machines) and computational complexity.
140. Parallel Scientific Computing
(4) YANG
Prerequisites: Mathematics 5B and Computer Science 20; and, Computer Science 12 or 60.
Not open for credit to students who have com- pleted Computer Science 110B.
Fundamentals of high performance computing and parallel algorithm design for numerical computation. Topics include parallel architecture and clusters, paral- lel programming with message-passing libraries and threads, program parallelization methodologies, paral- lel performance evaluation and optimization, parallel numerical algorithms and applications with different performance trade-offs.
153A. Hardware/Software Interface
(4) KRINTZ
Prerequisite: Computer Science 130A with a minimum grade of C-.
Same course as ECE 153A.
Machine-level structures implementing the operat- ing system abstraction; memory-mappers, multi-level interrupts, direct memory access techniques. Low- est-level software/firmware structures: micro-kernels, interpreters, emulators, threaded-code, real-time scheduling. Compilation and cross-compilation tech- niques; system initialization; validation and debugging; in-circuit testing.
154. Computer Architecture (4) SHERWOOD
Prerequisite: ECE 152A.
Not open for credit to students who have received credit for ECE 154.
Introduction to the architecture of computer sys- tems. Topics include: central processing units, memory systems, channels and controllers, peripheral devices, interrupt systems, software versus hardware trade-offs.
160. Translation of Programming Languages
(4) GONZALEZ
Prerequisites: Computer Science 130A; and Computer Science 136 or 138; open to computer science and computer engineering majors only.
Study of the structure of compilers. Topics include: lexical analysis; syntax analysis including LL and
LR parsers; type checking; run-time environments; intermediate code generation; and compiler-construc- tion tools.
162. Programming Languages
(4) SINGH
Prerequisite: Computer Science 130A; open to com- puter science and computer engineering majors only.
Concepts of programming languages: scopes, parameter passing, storage management; control flow, exception handling; encapsulation and modulariza- tion mechanism; reusability through genericity and inheritance; type systems; procedural, object-oriented, functional, and logic programming languages.
165A. Artificial Intelligence
(4) TURK
Prerequisite: Computer Science 130A; open to com- puter science, computer engineering, and electrical engineering majors only.
An introduction to the field of artificial intelligence which attempts to understand and build intelligent systems. Topics include AI programming languages, search, knowledge representation and reasoning, plan- ning, perception, and intelligent agents.
165B. Machine Learning
(4) SMITH
Prerequisite: Computer Science 165A.
Covers the most important techniques of machine learning (ML) and includes discussions of: well-posed learning problems; artificial neural networks; concept learning and general to specific ordering; decision tree learning; genetic algorithms; Bayesian learning; analytical learning; and others.
167. Introduction to Bioinformatics (4) SINGH
Prerequisite: Computer Science 130B.
Not open to students who have completed Com- puter Science 190
Review of the fundamentals of molecular biology and genetics; pairwise sequence alignment: dynamic programming, database searching; multiple sequence alignment; microarray data analysis; protein structure alignment; phylogeny construction: distance and char- acter based methods; other current topics.
170. Operating Systems
(4) AGRAWAL
Prerequisites: Computer Science 130A or 125; and, Computer Science 154 or ECE 154; open to computer science, computer engineering, and EE majors only.
Basic concepts of operating systems. The no- tion of a process; interprocess communication and synchronization; input-output, file systems, memory management.
College of engineering: ComPUter sCienCe • 79

80 • College of engineering: ComPUter sCienCe
171. Distributed Systems
(4) EL ABBADI
Prerequisite: Computer Science 170.
Not open for credit to students who have com- pleted ECE 151.
Distributed systems architecture, distributed pro- gramming, network of computers, message passing, remote procedure calls, group communication, naming and membership problems, asynchrony, logical time, consistency, fault-tolerance, and recovery.
172. Software Engineering
(4) BULTAN
Prerequisites: Computer Science 130A; open to com- puter science majors only.
Not open for credit to students who have com- pleted Computer Science 189A.
Recommended preparation: Computer Science 130B.
Software engineering is concerned with long- term, large-scale programming projects. Software management, cost estimates, problem specification and analysis, system design techniques, system testing and performance evaluation, and system maintenance. Students will design, manage, and implement a me- dium-sized project.
174A. Fundamentals of Database Systems (4) SU
Prerequisite: Computer Science 130A.
Database system architectures, relational data mod- el, relational algebra, relational calculus, SQL, QBE, query processing, integrity constraints (key constraints, referential integrity), database design, ER and object- oriented data model, functional dependencies, lossless join and dependency preserving decompositions, Boyce-Codd and Third Normal Forms.
174B. Design and Implementation Techniques of Database Systems (4) SU
Prerequisite: Computer Science 130B.
Queries and processing, optimizer, cost models, ex- ecution plans, rewriting rules, access methods, spatial indexing, transactions, ACID properties, concurrency control, serializability, two-phase locking, timestamp- ing, logging, checkpointing, transaction abort and commit, crash recovery; distributed databases.
176A. Introduction to Computer Communication Networks
(4) ALMEROTH
Prerequisites: PSTAT 120A or ECE 139; open to com- puter science, computer engineering, and electrical engineering majors only.
Not open for credit to students who have complet- ed Computer Science 176 or ECE 155 or ECE 155A.
Recommended preparation: PSTAT 120B.
Basic concepts in networking, the OSI model, error detection codes, flow control, routing, medium access control, and high-speed networks.
176B. Network Computing
(4) ALMEROTH
Prerequisite: Computer Science 176A.
Not open for credit to students who have com- pleted ECE 155B or 194W.
Focus on networking technologies used in the Internet. The OSI model is used as a guide for explor- ing and understanding how the Internet works. Topics include snooping packets in the network, socket programming, and implementing application-layer protocols.
176C. Advanced Topics in Internet Computing
(4) BELDING-ROYER
Prerequisite: Computer Science 176B.
General overview of wireless and mobile network- ing, multimedia, security multicast, quality of service, IPv6, and web caching. During the second half of the course, one or more of the above topics are studied in greater detail.
177. Computer Security
(4) KEMMERER
Prerequisite: Computer Science 170 (may be taken concurrently).
Introduction to the basics of computer security and privacy. Analysis of technical difficulties of producing
secure computer information systems that provide guaranteed controlled sharing. Examination and cri- tique of current systems, methods, certification.
180. Computer Graphics
(4) WANG
Prerequisite: Computer Science 130B.
X Window System; Xlib and widget programming; 2D drawing and painting algorithms; 2D transform and clipping; 3D transform, viewing, and clipping; overview of PHIGS graphics standard; graphics hard- ware; interactive devices and techniques; half-tone and dithering techniques; hidden surface removal algorithms.
181B. Introduction to Computer Vision (4) WANG
Same course as ECE 181B.
Overview of image processing, pattern recogni- tion; image formation, binary images; edge detection, image segmentation, introduction to textured image analysis, optical flow, depth from stereo, shape from shading, shape from motion, shape representation techniques, issues in object recognition, case study of some vision systems.
182. Multimedia Computing (4) ALMEROTH
Prerequisites: Computer Science 176B.
Not open for credit to students who have com- pleted ECE 160.
Introduction to multimedia and applications. Topics include streaming media, conferencing, webcasting, digital libraries, multimedia system architectures, standards (including JPEG and MPEG), and multimedia storage and retrieval. A key emphasis is on using the Internet for delivery of multimedia data.
185. Human-Computer Interaction
(4) HOLLERER
Prerequisite: open to computer science, computer engineering, and electrical engineering majors.
Recommended preparation: proficiency in the Java programming language, some experience with user interface programming
The study of human-computer interaction enables system architects to design useful, efficient, and enjoyable computer interfaces. This course teaches the theory, design guidelines, programming practices, and evaluation procedures behind effective human interac- tion with computers.
186. Theory of Computation
(4) IBARRA
Prerequisite: Computer Science 138; open to computer science majors only.
Not open for credit to students who have com- pleted Mathematics 150A.
Turing machines; computability and unsolvability; computational complexity; intractability and NP-com- pleteness.
189A. Senior Computer Systems Project (4) STAFF
Prerequisite: senior standing in Computer Engineering, Electrical Engineering, or Computer Science; consent of instructor.
Not open for credit to students who have com- pleted Computer Science 172.
Student groups design a significant computer- based project. Groups work independently with interaction among groups via interface specifications and informal meetings.
189B. Senior Computer Systems Project (4) STAFF
Prerequisite: senior standing in Computer Engineering, Electrical Engineering, or Computer Science; consent of instructor.
Not open for credit to students who have com- pleted Computer Science 189A-B.
Student groups design a significant computer- based project. Groups work independently with interaction among groups via interface specifications and informal meetings.
190AA-ZZ. Special Topics in Computer Science
(4) STAFF
Prerequisite: consent of instructor.
May be repeated with consent of the department chair.
Courses provide for the study of topics of current interest in computer science.
A. Foundations
B. Software Systems
C. Programming languages and software
engineering
D. Information management
E. Architecture
F. Networking
G. Security
H. Scientific computing
I. Intelligent and interactive systems N. General
192. Projects in Computer Science (4) STAFF
Prerequisite: consent of instructor.
Students must have a minimum 3.0 GPA. May be repeated with consent of the department chair but only 4 units may be applied to the major.
Projects in computer science for advanced under- graduate students.
193. Internship in Industry
(1-4) STAFF
Prerequisites: consent of instructor and department chair.
Not more than 4 units per quarter; may not be used as a field elective and may not be applied to science electives. May be repeated with faculty/chair approval to a maximum of 4 units.
Special projects for selected students. Offered in conjunction with selected industrial and research firms under direct faculty supervision. Prior departmental approval required. Written proposal and final report required.
196. Undergraduate Research
(2-4) STAFF
Prerequisites: upper-division standing, consent of the instructor.
Must have a minimum 3.0 grade-point average for the preceding three quarters. May be repeated for up to 12 units. No more than 4 units may be applied to departmental electives.
Research opportunities for undergraduate students. Students will be expected to give regular oral presen- tations, actively participate in a weekly seminar, and prepare at least one written report on their research.
199. Independent Studies in Computer Science
(1-4) STAFF
Prerequisites: upper-division standing; must have com- pleted at least two upper-division courses in computer science.
Must have a minimum 3.0 grade-point average for the preceding three quarters. May be repeated with consent of chair. Students are limited to 5 units per quarter and 30 units total in all 198/199 courses combined.
Independent study in computer science for ad- vanced students.
graDUate CoUrses
211A. Matrix Analysis and Computation (4) STAFF
Prerequisite: consent of instructor.
Same course as ECE 210A, ME 210A, Mathemat- ics 206A, Chemical Engineering 211A, and Geology 251A. Students should be proficient in basic numerical methods, linear algebra, mathematically rigorous proofs, and some programming language.
Graduate level-matrix theory with introduction to matrix computations. SVD’s, pseudoinverses, variation- al characterization of eigenvalues, perturbation theory, direct and iterative methods for matrix computations.
211B. Numerical Simulation (4) STAFF
Prerequisite: consent of instructor.
Same course as ECE 210B, ME 210B, Mathematics 206B, Chemical Engineering 211B, and Geology 251B. Students should be proficient in basic numerical meth- ods, linear algebra, mathematically rigorous proofs, and some programming language.
Linear multistep methods and Runge-Kutta meth- ods for ordinary differential equations: stability, order,

and convergence. Stiffness. Differential algebraic equa- tions. Numerical solution of boundary value problems.
211C. Numerical Solution of Partial Differential Equations—Finite Difference Methods
(4) STAFF
Prerequisite: consent of instructor.
Same course as ECE 210C, ME 210C, Mathemat-
ics 206C, Chemical Engineering 211C, and Geology 251C. Students should be proficient in basic numerical methods, linear algebra, mathematically rigorous proofs, and some programming language.
Finite difference methods for hyperbolic, parabolic and elliptic PDEs, with application to problems in science and engineering. Convergence, consistency, order and stability of finite difference methods. Dissipation and dispersion. Finite volume methods. Software design and adaptivity.
211D. Numerical Solution of Partial Differential Equations—Finite Element Methods
(4) STAFF
Prerequisite: consent of instructor.
Same course as ECE 210D, ME 210D, Mathemat-
ics 206D, Chemical Engineering 211D, and Geology 251D. Students should be proficient in basic numerical methods, linear algebra, mathematically rigorous proofs, and some programming language.
Weighted residual and finite element methods for the solution of hyperbolic, parabolic, and elliptical par- tial differential equations, with application to problems in science and engineering. Error estimates. Standard and discontinuous Galerkin methods.
216. Level Set Methods
(4) GIBOU
Prerequisite: Computer Science 211C, or Chemical Engineering 211C, or ECE 210C, or ME 210C.
Same course as Chemical Engineering 226, ECE 226, and ME 216.
Mathematical description of the level set method and design of the numerical methods used in its implementations (ENO-WENO, Godunov, Lax-Friedrich, etc.). Introduction to the Ghost Fluid Method. Applica- tions in CFD, Materials Sciences, Computer Vision and Computer Graphics.
220. Theory of Computation and Complexity
(4) IBARRA
Prerequisite: Computer Science 186.
Topics include: models of computation; time and space complexity classes (e.g., P, NP, Co-NP, and PSPACE), efficient reducibilities, complete problems; lower bounds; the polynomial hierarchy.
225. Information Theory
(4) VAN DAM
Prerequisites: ECE 140 or PSTAT 120A-B.
Same course as ECE 205A.
Entropy, mutual information, and Shannon’s coding theorems; lossless source coding, Huffman, Shannon-Fano-Elias, and arithmetic codes; Chan-
nel capacity; rate-distortion theory, and lossy source coding; source-channel coding; algorithmic complexity and information; applications of information theory in various fields.
230. Approximations, NP-Completeness and Algorithms
(4) GONZALEZ
Prerequisites: Computer Science 130A-B.
Epsilon approximations, PTAS and FPTAS. Tech- niques for the design of approximation algorithms. P, NP, NP-complete problems, polynomial transforma- tions, Turing reductions, strong NP-completeness, NP-hardness and inapproximability results. Topics
in algorithms include: amortized analysis, advanced graph algorithms and data structures.
231. Topics in Combinatorial Algorithms (4) SURI
Prerequisite: Computer Science 130B.
Advanced topics in algorithm design, including network flows, matchings in graphs, linear and integer programming.
234. Randomized Algorithms (4) EGECIOGLU
Prerequisite: Computer Science 186..
Randomized algorithms and applications: Las Vegas and Monte Carlo type algorithms, randomized algo- rithms for graph problems, matchings, data structures, problems from computational geometry, number theory and primality testing, distributed algorithms, hashing and fingerprinting, random generation, Mar- kov chains and rapid mixing.
235. Computational Geometry (4) SURI
Prerequisites: Computer Science 130A-B.
Algorithms and lower bound techniques in computational geometry; decision tree models of computation; geometric searching; point location and range search; convex hull and maxima of a point set; proximity algorithms; geometric intersections.
240A. Applied Parallel Computing (4) YANG
Prerequisites: Computer Science 154 and 160.
Interdisciplinary introduction to applied paral-
lel computing on modern supercomputers. Topics include applications-oriented architectural issues, MPI, parallel MATLAB, and parallel numerical algorithms. A course project emphasizes understanding the realities and myths of what is possible on the world’s fastest machines.
240B. Parallel Computing and Program Parallelization
(4) YANG
Prerequisites: Computer Science 130A and 160.
Parallel programming; representation of parallelism, program dependence analysis, loop transformation; program and data partitioning, locality optimization; task scheduling and load balancing; parallelizing compilers and run-time support.
254. Advanced Computer Architecture (4) SHERWOOD
Prerequisite: Computer Science 154 or ECE 154.
Advanced instruction set architectures, pipelining, dynamic scheduling, branch prediction, superscalar issue, out-of-order execution, memory-hierarchy design, advanced cache architectures, and prefetching. Several real designs are dissected and simulators are developed for performing quantitative evaluations of design decisions.
260. Advanced Topics in Translation (4) STAFF
Prerequisites: Computer Science 160 and 162.
Theoretical aspects of translation. Topics include: data flow analysis; control flow analysis; interproce- dural analysis; optimization; type systems.
263. Modern Programming Languages and Their Implementation
(4) KRINTZ
Prerequisites: Computer Science 154, 160, and 162.
Recommended preparation: Computer Science 260.
Topics central to modern programming languages and their implementation: garbage collection; memory system performance; characteristics and optimization of object-oriented languages; type systems and type inference; run-time compilation.
265. Advanced Topics in Machine Intelligence
(4) SMITH
Prerequisite: Computer Science 165.
Course may be repeated for credit.
Topics covered include advanced programming techniques for representing and reasoning about complex objects, and various applications of such techniques including expert systems, natural language processors, image understanding systems, and ma- chine learning.
266. Formal Specification and Verification (4) KEMMERER
Prerequisites: Computer Science 130A-B; Computer Science 186.
Introduction to existing specification and verification systems, and the underlying theory and techniques of verifying the correctness of algorithms with respect to specifications. This subject can be
considered as the combination of specification and verification techniques, programming language semantics, and formal logic.
267. Automated Verification
(4) BULTAN
Prerequisites: Computer Science 130A-B and 138.
Covers automated verification algorithms and tools. Topics include: temporal logics, fixpoint char- acterizations of temporal properties, model checking, symbolic verification, explicit-state verification, verifica- tion using automated theorem provers, automated abstraction.
271. Advanced Topics in Distributed Systems
(4) EL ABBADI
Prerequisite: Computer Science 170.
Course covers the fundamental problems in distrib- uted systems and the various tools used to solve them. Of primary interest is the issue of fault-tolerance. Topics include event ordering, clocks, global states, agreement, fault tolerance, and peer-to-peer systems.
272. Software Engineering (4) KEMMERER
Prerequisite: Computer Science 172.
Principles of software engineering disciplines em- phasizing requirements analysis, specification design, coding, testing and correctness proofs, maintenance, and management. Students will use a number of software engineering tools.
273. Data and Knowledge Bases (4) SU
Prerequisite: Computer Science 186.
The focus is on the study of relational and post- relational data models and their query languages of different styles (algebraic, calculus, and deductive): complexity, expressive power, optimization, and database design.
274. Transaction Management in Distributed Databases
(4) EL ABBADI
Prerequisite: Computer Science 170.
Topics include: data models, semantics; data integ- rity; database design; serializability theory, concurrency control, recovery, distributed databases.
276. Advanced Topics in Networking (4) BELDING
Prerequisite: Computer Science 176A or 176B.
Focuses on advanced topics in networking. Topics may include, but are not limited to: Internet analysis, routing techniques, multimedia, approaches for net- work performance enhancements, and communication over new technologies.
279. Network Security and Intrusion Detection
(4) VIGNA
Prerequisite: Computer Science 177.
Security analysis of network protocols and network vulnerabilities. Analysis of scanning, spoofing, hijack- ing, and denial-of-service attacks. Authentication
and access control in computer networks. Firewalls and network monitoring tools. Intrusion detection techniques.
280. Computer Graphics
(4) WANG
Prerequisite: Computer Science 180.
Special topics in computer graphics including: curves and curved surfaces, visual perception of colors and color models; shading models; shadow genera- tion; texture mapping; solid textures; stereographics; helmet-mounted display; graphics hardware/archi- tecture; solid modeling; physically-based modeling; fractals and graphtals; volume rendering; scientific visualization.
281B. Advanced Topics in Computer Vision
(4) WANG
Prerequisite: Computer Science 181B.
Same course as ECE 281B.
Advanced topics in computer vision: image sequence analysis, spatio-temporal filtering, camera calibration and hand-eye coordination, robot naviga- tion, shape representation, physically-based modeling,
College of engineering: ComPUter sCienCe • 81

82 • College of engineering: eleCtriCal and ComPUter engineering
multi-sensory fusion, biological models, expert vision systems, and other topics selected from recent research papers.
284. Mobile Computing
(4) BELDING-ROYER
Prerequisite: Computer Science 176A or 176B.
Recommended preparation: Computer Science 276.
Focuses on mobile computing. Topics may include, but are not limited to: mobile network characteristics, types of mobile networks, challenges and solu-
tions in mobile computing, and power conservation techniques.
290AA-ZZ. Special Topics in Computer Science
(4) STAFF
Prerequisite: consent of instructor.
These courses provide for the study of topics of current interest in computer science. Special topics are coded as follows:
A. Foundations
B. Software Systems
C. Programming languages and software
engineering
D. Information management
E. Architecture
F. Networking
G. Security
H. Scientific computing
I. Intelligent and interactive systems N. General
501. Techniques of Computer Science Teaching
(1) STAFF
This course is required for new teaching assistants and may be taken only once. No unit credit allowed toward advanced degree.
An initial 1-2 day workshop on teaching techniques followed by a weekly seminar. Course emphasizes teaching skills, practical experience, and communica- tion skills.
502. Teaching of Computer Science
(1-4) STAFF
Prerequisite: Computer Science 501 (may be taken concurrently).
No unit credit allowed toward advanced degree.
Procedures and techniques for teaching computer science gained through actual teaching of lecture courses, leading discussion sections, and/or teaching laboratories. Meetings will be held as needed to discuss problems, methods and procedures.
593. Computer Science Graduate Tutorial (12) STAFF
Prerequisite: consent of instructor or department chair.
Individual studies exploring topics in computer sci- ence with a faculty advisor.
594. Seminar in Computer Science
(1-5) STAFF
Prerequisite: consent of instructor and department.
A seminar course offered on an irregular basis. Provides an in-depth discussion of advanced topics of general interest and broadens the scope of knowledge in computer science.
595AA-ZZ. Group Studies in Computer Science
(1-2) STAFF
Prerequisite: consent of instructor.
May be repeated for credit provided letter designa- tions are different.
Special seminars focusing on topics of interest to faculty and graduate students. These seminars provide critical review of research in various areas of computer science:
A. Foundations
B. Software Systems
C. Programming languages and software
engineering
D. Information management
E. Architecture
F. Networking
G. Security
H. Scientific computing
I. Intelligent and interactive systems N. General
596. Directed Research (2-12) STAFF
Research, either experimental or theoretical, may be undertaken by properly qualified graduate students under the direction of a faculty member.
597. Individual Studies for M.S. Comprehensive Examinations and Ph.D. Examinations
(1-12) STAFF
No unit credit allowed toward advanced degree. Enrollment limited to 24 units per examination. Maxi- mum of 12 units per quarter. Instructor is normally student’s major professor or chair of doctoral commit- tee. S/U grading.
Individual studies for M.S. comprehensive examina- tion and Ph.D. examinations.
598. Master’s Thesis Research and Preparation
(1-12) STAFF
Prerequisite: consent of graduate advisor.
For research underlying the thesis and writing of the thesis.
599. Ph.D. Dissertation Research and Preparation
(1-12) STAFF
Prerequisite: consent of chair of student’s doctoral committee.
Research and preparation of dissertation.