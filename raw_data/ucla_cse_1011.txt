1. Freshman Computer Science Seminar. (1) Seminar, one hour; discussion, one hour. Introduction to department resources and principal topics and key ideas in computer science and computer engineering. Assignments given to bolster independent study and writing skills. Letter grading.

2. Great Ideas in Computer Science. (4) Lecture, four hours; outside study, eight hours. Broad coverage for liberal arts and social sciences students of computer science theory, technology, and implications, including artificial and neural machine intelligence, computability limits, virtual reality, cellular automata, artificial life, programming languages survey, and philosophical and societal implications. P/NP or letter grading.

31. Introduction to Computer Science I. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Introduction to computer science via theory, applications, and programming. Basic data types, operators and control structures. Input/output. Procedural and data abstraction. Introduction to object-oriented software development. Functions, recursion. Arrays, strings, pointers. Abstract data types, object-oriented programming. Examples and exercises from computer science theory and applications. Letter grading.

32. Introduction to Computer Science II. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 31. Object-oriented software development. Abstract data type definition and use. Overloading, inheritance, polymorphism. Object-oriented view of data structures: stacks, queues, lists. Algorithm analysis. Trees, graphs, and associated algorithms. Searching and sorting. Case studies and exercises from computer science applications. Letter grading.

33. Introduction to Computer Organization. (5) Lecture, four hours; discussion, two hours; outside study, nine hours. Enforced requisite: course 32. Introductory course on computer architecture, assembly language, and operating systems fundamentals. Number systems, machine language, and assembly language. Procedure calls, stacks, interrupts, and traps. Assemblers, linkers, and loaders. Operating systems concepts: processes and process management, input/output (I/O) programming, memory management, file systems. Letter grading.

35L. Software Construction Laboratory. (2) Laboratory, four hours; outside study, two hours. Requisite: course 31. Fundamentals of commonly used software tools and environments, particularly open-source tools to be used in upper division computer science courses. Letter grading.

M51A. Logic Design of Digital Systems. (4) (Same as Electrical Engineering M16.) Lecture, four hours; discussion, two hours; outside study, six hours. Introduction to digital systems. Specification and implementation of combinational and sequential systems. Standard logic modules and programmable logic arrays. Specification and implementation of algorithmic systems: data and control sections. Number systems and arithmetic algorithms. Error control codes for digital information. Letter grading.

97. Variable Topics in Computer Science. (1 to 4) Lecture, one to four hours; discussion, zero to two hours. Designed for freshmen/sophomores. Variable topics in computer science not covered in regular computer science courses. May be repeated once for credit with topic or instructor change. Letter grading.

Upper Division Courses

101. Upper Division Computer Science Seminar. (1) Seminar, one hour; discussion, one hour. Introduction to current research, trends, emerging areas, and contemporary issues in computer science and engineering. Assignments given to bolster independent study and writing skills. Letter grading.

111. Operating Systems Principles. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisites: courses 32, 33, 35L. Introduction to operating systems design and evaluation. Computer software systems performance, robustness, and functionality. Kernel structure, bootstrapping, input/ output (I/O) devices and interrupts. Processes and threads; address spaces, memory management, and virtual memory. Scheduling, synchronization. File systems: layout, performance, robustness. Distributed systems: networking, remote procedure call (RPC), asynchronous RPC, distributed file systems, transac- 256 / Computer Science

tions. Protection and security. Exercises involving applications using, and internals of, real-world operating systems. Letter grading.

112. Computer System Modeling Fundamentals. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisite: Statistics 100A or 110A. Designed for juniors/seniors. Probability and stochastic process models as applied in computer science. Basic methodological tools include random variables, conditional probability, expectation and higher moments, Bayes theorem, Markov chains. Applications include probabilistic algorithms, evidential reasoning, analysis of algorithms and data structures, reliability, communication protocol and queueing models. Letter grading.

113. Introduction to Distributed Embedded Systems. (4) Lecture, four hours; laboratory, four hours; outside study, four hours. Requisites: courses 111,

118. Introduction to basic concepts needed to understand, design, and implement wireless distributed embedded systems. Topics include design implications of energy and otherwise resource-constrained nodes, network self-configuration and adaptation, localization and time synchronization, applications, and usage issues such as human interfaces, safety, and security. Heavily project based. Letter grading.

M117. Computer Networks: Physical Layer. (6) (Same as Electrical Engineering M117.) Lecture, four hours; discussion, four hours; outside study, 10 hours. Not open to students with credit for course M171L. Introduction to fundamental data communication concepts underlying and supporting modern networks, with focus on physical and media access layers of network protocol stack. Systems include high-speed LANs (e.g., fast and giga Ethernet), optical DWDM (dense wavelength division multiplexing), time division SONET networks, wireless LANs (IEEE802.11), and ad hoc wireless and personal area networks (e.g., Bluetooth). Experimental laboratory sessions included. Letter grading.

118. Computer Network Fundamentals. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 32, 33, 35L, 111. Designed for juniors/seniors. Introduction to design and performance evaluation of computer networks, including such topics as what protocols are, layered network architecture, Internet protocol architecture, network applications, transport protocols, routing algorithms and protocols, internetworking, congestion control, and link layer protocols including Ethernet and wireless channels. Letter grading.

CM121. Introduction to Bioinformatics. (4) (Same as Chemistry CM160A.) Lecture, three hours; discussion, one hour. Enforced requisites: course 180 or Program in Computing 60 with grade of C– or better, and Biostatistics 100A or 110A or Mathematics 170A or Statistics 100A or 110A. Introduction to bioinformatics and methodologies, with emphasis on concepts and inventing new bioinformatic methods. Focus on sequence analysis and alignment algorithms. Concurrently scheduled with course CM221. P/NP or letter grading.

CM122. Algorithms in Bioinformatics and Systems Biology. (4) (Same as Chemistry CM160B.) Lecture, four hours; laboratory, four hours. Enforced requisite: course CM121 or Chemistry CM160A with grade of C– or better. Recommended: Computer Science 32 or Program in Computing 60, Statistics 100A, 110A. Development and application of computational approaches to biological questions. Understanding of mechanisms for determining statistical significance of computationally derived results. Development of foundation for innovative work in bioinformatics and systems biology. Concurrently scheduled with course CM222. Letter grading.

CM124. Computational Genetics. (4) (Same as Human Genetics CM124.) Lecture, three hours; discussion, one hour; outside study, eight hours. Preparation: one statistics course and familiarity with any programming language. Designed for undergraduate and graduate engineering students, as well as students from biological sciences and medical school. Introduction to current quantitative understanding of human genetics and computational interdisciplinary research in genet-

ics. Topics include introduction to genetics, human population history, linkage analysis, association analysis, association study design, isolated and admixed populations, population substructure, human structural variation, model organisms, and genotyping technologies. Computational techniques include those from statistics and computer science. Concurrently scheduled with course CM224. Letter grading.

130. Software Engineering. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisites: courses 32, 35L. Recommended: Engineering 183 or 185. Structured programming, program specification, program proving, modularity, abstract data types, composite design, software tools, software control systems, program testing, team programming. Letter grading.

131. Programming Languages. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisites: courses 32, 33, 35L. Basic concepts in design and use of programming languages, including abstraction, modularity, control mechanisms, types, declarations, syntax, and semantics. Study of several different language paradigms, including functional, object-oriented, and logic programming. Letter grading.

132. Compiler Construction. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 32, 35L, 131, 181. Compiler structure; lexical and syntactic analysis; semantic analysis and code generation; theory of parsing. Letter grading.

133. Parallel and Distributed Computing. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 111 (may be taken concurrently), 131. Distributed memory and shared memory parallel architectures; asynchronous parallel languages: MPI, Maisie; primitives for parallel computation: specification of parallelism, interprocess communication and synchronization; design of parallel programs for scientific computation and distributed systems. Letter grading.

136. Introduction to Computer Security. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 111, 118. Introduction to basic concepts of information security necessary for students to understand risks and mitigations associated with protection of systems and data. Topics include security models and architectures, security threats and risk analysis, access control and authentication/ authorization, cryptography, network security, secure application design, and ethics and law. Letter grading.

143. Database Systems. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisite: course 32. Information systems and database systems in enterprises. File organization and secondary storage structures. Relational model and relational database systems. Network, hierarchical, and other models. Query languages. Database design principles. Transactions, concurrency, and recovery. Integrity and authorization. Letter grading.

144. Web Applications. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Enforced requisite: course 143. Important concepts and theory for building effective and safe Web applications and first-hand experience with basic tools. Topics include basic Web architecture and protocol, XML and XML query language, mapping between XML and relational models, information retrieval model and theory, security and user model, Web services and distributed transactions. Letter grading.

M151B. Computer Systems Architecture. (4) (Same as Electrical Engineering M116C.) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses 33, and M51A or Electrical Engineering M16. Recommended: courses 111, and M152A or Electrical Engineering M116L. Computer system organization and design, implementation of CPU datapath and control, instruction set design, memory hierarchy (caches, main memory, virtual memory) organization and management, input/output subsystems (bus structures, interrupts, DMA), performance evaluation, pipelined processors. Letter grading.

151C. Design of Digital Systems. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: courses M51A, M151B, M152A. Design of

complex digital systems using hierarchal approaches and regular structures. Combinational, sequential, and algorithmic systems. Microprogramming and firmware engineering. Cost/performance measures and technology constraints. Use of design tools. Design project. Letter grading.

M152A. Introductory Digital Design Laboratory. (2) (Same as Electrical Engineering M116L.) Laboratory, four hours; outside study, two hours. Requisite: course M51A or Electrical Engineering M16. Hands-on design, implementation, and debugging of digital logic circuits, use of computer-aided design tools for schematic capture and simulation, implementation of complex circuits using programmed array logic, design projects. Letter grading.

152B. Digital Design Project Laboratory. (4) (Formerly numbered M152B.) Laboratory, four hours; discussion, two hours; outside study, six hours. Requisite: course M151B or Electrical Engineering M116C. Design and implementation of complex digital subsystems using field-programmable gate arrays (e.g., processors, special-purpose processors, device controllers, and input/output interfaces). Students work in teams to develop and implement designs and to document and give oral presentations of their work. Letter grading.

161. Fundamentals of Artificial Intelligence. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisite: course 32. Introduction to fundamental problem solving and knowledge representation paradigms of artificial intelligence. Introduction to Lisp with regular programming assignments. State-space and problem reduction methods, bruteforce and heuristic search, planning techniques, twoplayer games. Knowledge structures including predicate logic, production systems, semantic nets and primitives, frames, scripts. Special topics in natural language processing, expert systems, vision, and parallel architectures. Letter grading.

170A. Mathematical Modeling and Methods for Computer Science. (4) Lecture, four hours; laboratory, two hours; outside study, six hours. Requisite: Mathematics 33B. Introduction to methods for modeling and simulation using interactive computing environments. Extensive coverage of methods for numeric and symbolic computation, matrix algebra, statistics, floating point, optimization, and spectral analysis. Emphasis on applications in simulation of physical systems. Letter grading.

M171L. Data Communication Systems Laboratory. (2 to 4) (Same as Electrical Engineering M171L.) Laboratory, four to eight hours; outside study, two to four hours. Recommended preparation: course M152A. Limited to seniors. Interpretation of analogsignaling aspects of digital systems and data communications through experience in using contemporary test instruments to generate and display signals in relevant laboratory setups. Use of oscilloscopes, pulse and function generators, baseband spectrum analyzers, desktop computers, terminals, modems, PCs, and workstations in experiments on pulse transmission impairments, waveforms and their spectra, modem and terminal characteristics, and interfaces. Letter grading.

174A. Introduction to Computer Graphics. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisite: course 32. Basic principles behind modern two- and three-dimensional computer graphics systems, including complete set of steps that modern graphics pipelines use to create realistic images in real time. How to position and manipulate objects in scene using geometric and camera transformations. How to create final image using perspective and orthographic transformations. Basics of modeling primitives such as polygonal models and implicit and parametric surfaces. Basic ideas behind color spaces, illumination models, shading, and texture mapping. Letter grading.

174B. Introduction to Computer Graphics: Three-Dimensional Photography and Rendering. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisite: course 174A. State of art in three-dimensional photography and image-based rendering. How to use cameras and light to capture Computer Science / 257

shape and appearance of real objects and scenes. Process provides simple way to acquire three-dimensional models of unparalleled detail and realism. Applications of techniques from entertainment (reverse engineering and postprocessing of movies, generation of realistic synthetic objects and characters) to medicine (modeling of biological structures from imaging data), mixed reality (augmentation of video), and security (visual surveillance). Fundamental analytical tools for modeling and inferring geometric (shape) and photometric (reflectance, illumination) properties of objects and scenes, and for rendering and manipulating novel views. Letter grading. C174C. Computer Animation. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisite: course 174A. Designed for juniors/seniors. Introduction to computer animation, including basic principles of character modeling, forward and inverse kinematics, forward and inverse dynamics, motion capture animation techniques, physics-based animation of particles and systems, and motor control. Concurrently scheduled with course C274C. Letter grading.

180. Introduction to Algorithms and Complexity.

(4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: course 32, and Mathematics 61 or 180. Designed for junior/senior Computer Science majors. Introduction to design and analysis of algorithms. Design techniques: divide-and-conquer, greedy method, dynamic programming; selection of prototypical algorithms; choice of data structures and representations; complexity measures: time, space, upper, lower bounds, asymptotic complexity; NP-completeness. Letter grading.

181. Introduction to Formal Languages and Automata Theory. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisites: course 32, and Mathematics 61 or 180. Designed for junior/senior Computer Science majors. Grammars, automata, and languages. Finite-state languages and finite-state automata. Context-free languages and pushdown story automata. Unrestricted rewriting systems, recursively enumerable and recursive languages, and Turing machines. Closure properties, pumping lemmas, and decision algorithms. Introduction to computability. Letter grading.

183. Introduction to Cryptography. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Preparation: knowledge of basic probability theory. Requisite: course 180. Introduction to cryptography, computer security, and basic concepts and techniques. Topics include notions of hardness, one-way functions, hard-core bits, pseudorandom generators, pseudorandom functions and pseudorandom permutations, semantic security, public-key and private-key encryption, key-agreement, homomorphic encryption, private information retrieval and voting protocols, message authentication, digital signatures, interactive proofs, zero-knowledge proofs, collision-resistant hash functions, commitment protocols, and two-party secure computation with static security. Letter grading. M184. Introduction to Computational and Systems Biology. (2) (Formerly numbered M186A.) (Same as Biomedical Engineering M184 and Computational and Systems Biology M184.) Lecture, two hours; outside study, four hours. Requisites: course 31 (or Program in Computing 10A), Mathematics 31A, 31B. Survey course designed to introduce students to computational and systems modeling and computation in biology and medicine, providing motivation, flavor, culture, and cutting-edge contributions in computational biosciences and aiming for more informed basis for focused studies by students with computational and systems biology interests. Presentations by individual UCLA researchers discussing their active computational and systems biology research. P/NP grading.

CM186B. Computational Systems Biology: Modeling and Simulation of Biological Systems. (5) (Same as Biomedical Engineering CM186B and Computational and Systems Biology M186B.) Lecture, four hours; laboratory, three hours; outside study, eight hours. Corequisite: Electrical Engineering 102. Dynamic biosystems modeling and computer simulation methods for studying biological/biomedical pro-

cesses and systems at multiple levels of organization. Control system, multicompartmental, predator-prey, pharmacokinetic (PK), pharmacodynamic (PD), and other structural modeling methods applied to life sciences problems at molecular, cellular (biochemical pathways/networks), organ, and organismic levels. Both theory- and data-driven modeling, with focus on translating biomodeling goals and data into mathematics models and implementing them for simulation and analysis. Basics of numerical simulation algorithms, with modeling software exercises in class and PC laboratory assignments. Concurrently scheduled with course CM286B. Letter grading.

CM186C. Biomodeling Research and Research Communication Workshop. (2 to 4) (Formerly numbered CM186L.) (Same as Biomedical Engineering CM186C and Computational and Systems Biology M186C.) Lecture, one hour; discussion, two hours; laboratory, one hour; outside study, eight hours. Requisite: course CM186B. Closely directed, interactive, and real research experience in active quantitative systems biology research laboratory. Direction on how to focus on topics of current interest in scientific community, appropriate to student interests and capabilities. Critiques of oral presentations and written progress reports explain how to proceed with search for research results. Major emphasis on effective research reporting, both oral and written. Concurrently scheduled with course CM286C. Letter grading.

188. Special Courses in Computer Science. (4) Lecture, four hours; outside study, eight hours. Special topics in computer science for undergraduate students taught on experimental or temporary basis, such as those taught by resident and visiting faculty members. May be repeated once for credit with topic or instructor change. Letter grading.

194. Research Group Seminars: Computer Science. (4) Seminar, four hours; outside study, eight hours. Designed for undergraduate students who are part of research group. Discussion of research methods and current literature in field or of research of faculty members or students. May be repeated for credit. Letter grading.

199. Directed Research in Computer Science. (2 to 8) Tutorial, to be arranged. Limited to juniors/seniors. Supervised individual research or investigation under guidance of faculty mentor. Culminating paper or project required. May be repeated for credit with school approval. Individual contract required; enrollment petitions available in Office of Academic and Student Affairs. Letter grading.

Graduate Courses

201. Computer Science Seminar. (2) Seminar, four hours; outside study, two hours. Designed for graduate computer science students. Seminars on current research topics in computer science. May be repeated for credit. S/U grading.

202. Advanced Computer Science Seminar. (4) Seminar, four hours; outside study, eight hours. Preparation: completion of major field examination in computer science. Current computer science research into theory of, analysis and synthesis of, and applications of information processing systems. Each member completes one tutorial and one or more original pieces of work in one specialized area. May be repeated for credit. Letter grading.

211. Network Protocol and Systems Software Design for Wireless and Mobile Internet. (4) Lecture, four hours; outside study, eight hours. Requisite: course 118. Designed for graduate students. In-depth study of network protocol and systems software design in area of wireless and mobile Internet. Topics include (1) networking fundamentals: design philosophy of TCP/IP, end-to-end arguments, and protocol design principles, (2) networking protocols: 802.11 MAC standard, packet scheduling, mobile IP, ad hoc routing, and wireless TCP, (3) mobile computing systems software: middleware, file system, services, and applications, and (4) topical studies: energy-efficient design, security, location management, and quality of service. Letter grading.

212A. Queueing Systems Theory. (4) Lecture, four hours; outside study, eight hours. Requisites: course 112, Electrical Engineering 131A. Resource sharing issues and theory of queueing (waiting-line) systems. Review of Markov chains and baby queueing theory. Method of stages. M/E r /1. E r /M/1. Bulk arrival and bulk service systems. Series-parallel stages. Fundamentals of open and closed queueing networks. Intermediate queueing theory: M/G/1; G/M/m. Collective marks. Advanced queueing theory: G/G/1; Lindley integral equation; spectral solution. Inequalities, bounds, approximations. Letter grading.

212B. Queueing Applications: Scheduling Algorithms and Queueing Networks. (4) Lecture, four hours; outside study, eight hours. Requisite: course 212A. Priority queueing. Applications to time-sharing scheduling algorithms: FB, Round Robin, Conservation Law, Bounds. Queueing networks: definitions; job flow balance; product form solutions—local balance, M→ M; computational algorithms for performance measures; asymptotic behavior and bounds; approximation techniques—diffusion—iterative techniques; applications. Letter grading.

M213A. Embedded Systems. (4) (Same as Electrical Engineering M202A.) Lecture, four hours; outside study, eight hours. Requisite: course 111. Designed for graduate computer science and electrical engineering students. Methodologies and technologies for design of embedded systems. Topics include hardware and software platforms for embedded systems, techniques for modeling and specification of system behavior, software organization, real-time operating system scheduling, real-time communication and packet scheduling, low-power battery and energyaware system design, timing synchronization, fault tolerance and debugging, and techniques for hardware and software architecture optimization. Theoretical foundations as well as practical design methods. Letter grading.

M213B. Distributed Embedded Systems. (4) (Same as Electrical Engineering M202B.) Lecture, four hours; outside study, eight hours. Requisites: courses 111, and 118 or Electrical Engineering 132B. Designed for graduate computer science and electrical engineering students. Interdisciplinary course with focus on study of distributed embedded systems concepts needed to realize systems such as wireless sensor and actuator networks for monitoring and control of physical world. Topics include network self-configuration with localization and timing synchronization; energy-aware system design and operation; protocols for MAC, routing, transport, disruption tolerance; programming issues and models with language, OS, database, and middleware; in-network collaborative processing; fundamental characteristics such as coverage, connectivity, capacity, latency; techniques for exploitation and management of actuation and mobility; data and system integrity issues with calibration, faults, debugging, and security; and usage issues such as human interfaces and safety. Letter grading.

214. Data Transmission in Computer Communications. (4) Lecture, four hours; outside study, eight hours. Requisite: course 112. Limited to graduate computer science students. Discrete data streams, formats, rates, transductions; digital data transmissions via analog signaling in computer communication; media characteristics, systems methodologies, performance analysis; modem designs; physical interfaces in computer communication links; national/international standards; tests and measurements. Letter grading.

215. Computer Communications and Networks.

(4) Lecture, four hours; outside study, eight hours. Requisite: course 112. Resource sharing; computer traffic characterizations; multiplexing; network structure; packet switching and other switching techniques; ARPANET and other computer network examples; network delay and analysis; network design and optimization; network protocols; routing and flow control; satellite and ground radio packet switching; local networks; commercial network services and architectures. Optional topics include extended error control techniques; modems; SDLC, HDLC, X.25, etc.; proto- 258 / Computer Science

col verification; network simulation and measurement; integrated networks; communication processors. Letter grading.

216. Distributed Multiaccess Control in Networks. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 212A, 215. Topics from field of distributed control and access in computer networks, including terrestrial distributed computer networks; satellite packet switching; ground radio packet switching; local network architecture and control. Letter grading.

217A. Internet Architecture and Protocols. (4) Lecture, four hours; outside study, eight hours. Requisite: course 118. Focus on mastering existing core set of Internet protocols, including IP, core transport protocols, routing protocols, DNS, NTP, and security protocols such as DNSSEC, to understand principles behind design of these protocols, appreciate their design tradeoffs, and learn lessons from their operations. Letter grading.

217B. Advanced Topics in Internet Research. (4) Lecture, four hours; outside study, eight hours. Requisite: course 217A. Designed for graduate students. Overview of Internet development history and fundamental principles underlying TCP/IP protocol design. Discussion of current Internet research topics, including latest research results in routing protocols, transport protocols, network measurements, network security protocols, and clean-slate approach to network architecture design. Fundamental issues in network protocol design and implementations. Letter grading.

218. Advanced Computer Networks. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 112, 118. Review of seven-layer ISO-OSI model. High-speed networks: LANs, MANs, ATM. Flow and congestion control; bandwidth allocation. Internetting. Letter grading.

219. Current Topics in Computer System Modeling Analysis. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer system modeling analysis in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with consent of instructor. Letter grading.

CM221. Introduction to Bioinformatics. (4) (Same as Bioinformatics M260A, Chemistry CM260A, and Human Genetics M260A.) Lecture, three hours; discussion, one hour. Enforced requisites: course 180 or Program in Computing 60 with grade of C– or better, and Biostatistics 100A or 110A or Mathematics 170A or Statistics 100A or 110A. Introduction to bioinformatics and methodologies, with emphasis on concepts and inventing new bioinformatic methods. Focus on sequence analysis and alignment algorithms. Concurrently scheduled with course CM121. S/U or letter grading.

CM222. Algorithms in Bioinformatics and Systems Biology. (4) (Same as Chemistry CM260B.) Lecture, four hours; laboratory, four hours. Enforced requisite: course CM221 or Chemistry CM260A with grade of C– or better. Recommended: Computer Science 32 or Program in Computing 60, Statistics 100A, 110A. Development and application of computational approaches to biological questions. Understanding of mechanisms for determining statistical significance of computationally derived results. Development of foundation for innovative work in bioinformatics and systems biology. Concurrently scheduled with course CM122. Letter grading.

CM224. Computational Genetics. (4) (Same as Human Genetics CM224.) Lecture, three hours; discussion, one hour; outside study, eight hours. Preparation: one statistics course and familiarity with any programming language. Designed for undergraduate and graduate engineering students, as well as students from biological sciences and medical school. Introduction to current quantitative understanding of human genetics and computational interdisciplinary research in genetics. Topics include introduction to genetics, human population history, linkage analysis, association analysis, association study design, isolated and admixed populations, population substructure, human structural

variation, model organisms, and genotyping technologies. Computational techniques include those from statistics and computer science. Concurrently scheduled with course CM124. Letter grading.

M229S. Seminar: Current Topics in Bioinformatics. (4) (Same as Human Genetics M229S.) Seminar, four hours; outside study, eight hours. Designed for graduate engineering students, as well as students from biological sciences and medical school. Introduction to current topics in bioinformatics, genomics, and computational genetics and preparation for computational interdisciplinary research in genetics and genomics. Topics include genome analysis, regulatory genomics, association analysis, association study design, isolated and admixed populations, population substructure, human structural variation, model organisms, and genomic technologies. Computational techniques include those from statistics and computer science. May be repeated for credit with topic change. Letter grading.

230A. Models of Information and Computation. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 131, 181. Paradigms, models, frameworks, and problem solving; UML and metamodeling; basic information and computation models; axiomatic systems; domain theory; least fixed point theory; well-founded induction. Logical models: sentences, axioms and rules, normal forms, derivation and proof, models and semantics, propositional logic, first-order logic, logic programming. Functional models: expressions, equations, evaluation; combinators; lambda calculus; functional programming. Program models: program derivation and verification using Hoare logic, object models, standard templates, design patterns, frameworks. Letter grading.

231. Types and Programming Languages. (4) Lecture, four hours; outside study, eight hours. Requisite: course 131. Introduction to static type systems and their usage in programming language design and software reliability. Operational semantics, simplytyped lambda calculus, type soundness proofs, types for mutable references, types for exceptions. Parametric polymorphism, let-bound polymorphism, polymorphic type inference. Types for objects, subtyping, combining parametric polymorphism and subtyping. Types for modules, parameterized modules. Formal specification and implementation of variety of type systems, as well as readings from recent research literature on modern applications of type systems. Letter grading.

232. Static Program Analysis. (4) Lecture, four hours; outside study, eight hours. Requisite: course

132. Introduction to static analysis of object-oriented programs and its usage for optimization and bug finding. Class hierarchy analysis, rapid type analysis, equality-based analysis, subset-based analysis, flowinsensitive and flow-sensitive analysis, context-insensitive and context-sensitive analysis. Soundness proofs for static analyses. Efficient data structures for static analysis information such as directed graphs and binary decision diagrams. Flow-directed method inlining, type-safe method inlining, synchronization optimization, deadlock detection, security vulnerability detection. Formal specification and implementation of variety of static analyses, as well as readings from recent research literature on modern applications of static analysis. Letter grading.

233A. Parallel Programming. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 111, 131. Mutual exclusion and resource allocation in distributed systems; primitives for parallel computation: specification of parallelism, interprocess communication and synchronization, atomic actions, binary and multiway rendezvous; synchronous and asynchronous languages: CSP, Ada, Linda, Maisie, UC, and others; introduction to parallel program verification. Letter grading.

233B. Verification of Concurrent Programs. (4) Lecture, four hours; outside study, eight hours. Requisite: course 233A. Formal techniques for verification of concurrent programs. Topics include safety, liveness, program and state assertion-based techniques,

weakest precondition semantics, Hoare logic, temporal logic, UNITY, and axiomatic semantics for selected parallel languages. Letter grading.

234. Computer-Aided Verification. (4) Lecture, four hours; outside study, eight hours. Requisite: course

181. Introduction to theory and practice of formal methods for design and analysis of concurrent and embedded systems, with focus on algorithmic techniques for checking logical properties of hardware and software systems. Topics include semantics of reactive systems, invariant verification, temporal logic model checking, theory of omega automata, state-space reduction techniques, compositional and hierarchical reasoning. Letter grading.

235. Advanced Operating Systems. (4) Lecture, four hours. Preparation: C or C++ programming experience. Requisite: course 111. In-depth investigation of operating systems issues through guided construction of research operating system for PC machines and consideration of recent literature. Memory management and protection, interrupts and traps, processes, interprocess communication, preemptive multitasking, file systems. Virtualization, networking, profiling, research operating systems. Series of laboratory projects, including extra challenge work. Letter grading.

236. Computer Security. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 111, 118. Basic and research material on computer security. Topics include basic principles and goals of computer security, common security tools, use of cryptographic protocols for security, security tools (firewalls, virtual private networks, honeypots), virus and worm protection, security assurance and testing, design of secure programs, privacy, applying security principles to realistic problems, and new and emerging threats and security tools. Letter grading.

239. Current Topics in Computer Science: Programming Languages and Systems. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer science programming languages and systems in which instructor has developed special proficiency as consequence of research interests. May be repeated for credit with topic change. Letter grading.

240A. Databases and Knowledge Bases. (4) Lecture, four hours; outside study, eight hours. Requisite: course 143. Theoretical and technological foundation of Intelligent Database Systems, that merge database technology, knowledge-based systems, and advanced programming environments. Rule-based knowledge representation, spatio-temporal reasoning, and logic-based declarative querying/programming are salient features of this technology. Other topics include object-relational systems and data mining techniques. Letter grading.

240B. Advanced Data and Knowledge Bases. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 143, 240A. Logical models for data and knowledge representations. Rule-based languages and nonmonotonic reasoning. Temporal queries, spatial queries, and uncertainty in deductive databases and object relational databases (ORDBs). Abstract data types and user-defined column functions in ORDBs. Data mining algorithms. Semistructured information. Letter grading.

241A. Object-Oriented and Semantic Database Systems. (4) Lecture, three and one-half hours; discussion, 30 minutes; laboratory, one hour; outside study, seven hours. Requisite: course 143. Object database principles and requirements. Data models, accessing, and query languages. Object data management standards. Extended relational-object systems. Database systems architecture and functional components. Systems comparison. Commercial products. Database design, organization, indexing, and performance. Future directions. Other topics at discretion of instructor. Letter grading.

241B. Pictorial and Multimedia Database Management. (4) Lecture, three and one-half hours; discussion, 30 minutes; laboratory, one hour; outside study, seven hours. Requisite: course 143. Multimedia data: alphanumeric, long text, images/pictures, video, and voice. Multimedia information systems requirements. Computer Science / 259

Data models. Searching and accessing databases and across Internet by alphanumeric, image, video, and audio content. Querying, visual languages, and communication. Database design and organization, logical and physical. Indexing methods. Internet multimedia streaming. Other topics at discretion of instructor. Letter grading.

244A. Distributed Database Systems. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 215 and/or 241A. File allocation, intelligent directory design, transaction management, deadlock, strong and weak concurrency control, commit protocols, semantic query answering, multidatabase systems, fault recovery techniques, network partitioning, examples, trade-offs, and design experiences. Letter grading.

245A. Intelligent Information Systems. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 241A, 255A. Knowledge discovery in database, knowledge-base maintenance, knowledge-base and database integration architectures, and scale-up issues and applications to cooperative database systems, intelligent decision support systems, and intelligent planning and scheduling systems; computer architecture for processing large-scale knowledge-base/database systems. Letter grading.

246. Web Information Management. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 112, 143, 180, 181. Designed for graduate students. Scale of Web data requires novel algorithms and principles for their management and retrieval. Study of Web characteristics and new management techniques needed to build computer systems suitable for Web environment. Topics include Web measuring techniques, large-scale data mining algorithms, efficient page refresh techniques, Web-search ranking algorithms, and query processing techniques on independent data sources. Letter grading.

249. Current Topics in Data Structures. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of data structures in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with consent of instructor. Letter grading.

251A. Advanced Computer Architecture. (4) Lecture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 111. Design and implementation of high-performance systems, advanced memory hierarchy techniques, static and dynamic pipelining, superscalar and VLIW processors, branch prediction, speculative execution, software support for instruction-level parallelism, simulation-based performance analysis and evaluation, state-of-art design examples, introduction to parallel architectures. Letter grading.

251B. Parallel Computer Architectures. (4) Lecture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 251A. SIMD and MIMD systems, symmetric multiprocessors, distributed-shared-memory systems, messages-passing systems, multicore chips, clusters, interconnection networks, host-network interfaces, switching element design, communication primitives, cache coherency, memory consistency models, synchronization primitives, state-of-art design examples. Letter grading.

252A. Arithmetic Algorithms and Processors. (4) Lecture, four hours; outside study, eight hours. Requisite: course 251A. Number systems: conventional, redundant, signed-digit, and residue. Types of algorithms and implementations. Complexity measures. Fast algorithms and implementations for two-operand addition, multioperand addition, multiplication, division, and square root. Online arithmetic. Evaluation of transcendental functions. Floating-point arithmetic and numerical error control. Arithmetic error codes. Residue arithmetic. Examples of contemporary arithmetic ICs and processors. Letter grading.

253A. Design of Fault-Tolerant Systems. (4) Lecture, four hours; outside study, eight hours. Requisite or corequisite: course 251A. Fundamental concepts of dependable computing. Design methodology for fault-tolerant systems. Analytic models and mea-

sures, modeling tools. Design for critical applications: long-life, real-time, and high-availability systems. Tolerance of design faults: design diversity and fault-tolerant software. Letter grading.

253C. Testing and Testable Design of VLSI Systems. (4) Lecture, four hours; outside study, eight hours. Requisite: course M51A. Detailed study of various problems in testing and testable designs of VLSI systems, including fault modeling, fault simulation, testing for single stuck faults and multiple stuck faults, functional testing, design for testability, compression techniques, and built-in self-test. Letter grading.

254A. Computer Memories and Memory Systems. (4) Lecture, four hours; outside study, eight hours. Requisite: course 251A. Generic types of memory systems; control, access modes, hierarchies, and allocation algorithms. Characteristics, system organization, and device considerations of ferrite memories, thin film memories, and semiconductor memories. Letter grading.

255A. Distributed Processing Systems. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 215 and/or 251A. Task partitioning and allocation, interprocess communications, task response time model, process scheduling, message passing protocols, replicated file systems, interface, cache memory, actor model, fine grain multicomputers, distributed operating system kernel, error recovery strategy, performance monitoring and measurement, scalability and maintainability, prototypes and commercial distributed systems. Letter grading.

256A. Advanced Scalable Architectures. (4) Lecture, four hours; outside study, eight hours. Requisite: course M151B. Recommended: course 251A. Stateof-art scalable multiprocessors. Interdependency among implementation technology, chip microarchitecture, and system architecture. High-performance building blocks, such as chip multiprocessors (CMPs). On-chip and off-chip communication. Mechanisms for exploiting parallelism at multiple levels. Current research areas. Examples of chips and systems. Letter grading.

M258A. Design of VLSI Circuits and Systems. (4) (Same as Electrical Engineering M216A.) Lecture, four hours; discussion, one hour; laboratory, four hours; outside study, three hours. Requisites: course M51A or Electrical Engineering M16, and Electrical Engineering 115A. Recommended: Electrical Engineering 115C. LSI/VLSI design and application in computer systems. Fundamental design techniques that can be used to implement complex integrated systems on chips. Letter grading.

M258C. LSI in Computer System Design. (4) (Same as Electrical Engineering M216C.) Lecture, four hours; laboratory, four hours; outside study, four hours. Requisite: course M258A. LSI/VLSI design and application in computer systems. In-depth studies of VLSI architectures and VLSI design tools. Letter grading.

258E. Foundations of VLSI CAD Algorithms. (4) Lecture, four hours; outside study, eight hours. Preparation: one course in analysis and design of algorithms. Basic theory of combinatorial optimization for VLSI physical layout, including mathematical programming, network flows, matching, greedy and heuristic algorithms, and stochastic methods. Emphasis on practical application to computer-aided physical design of VLSI circuits at high-level phases of layout: partitioning, placement, graph folding, floorplanning, and global routing. Letter grading.

258F. Physical Design Automation of VLSI Systems. (4) Lecture, four hours; outside study, eight hours. Detailed study of various physical design automation problems of VLSI circuits, including logic partitioning, floorplanning, placement, global routing, channel and switchbox routing, planar routing and via minimization, compaction and performance-driven layout. Discussion of applications of number of important optimization techniques, such as network flows, Steiner trees, simulated annealing, and generic algorithms. Letter grading.

258G. Logic Synthesis of Digital Systems. (4) Lecture, four hours; outside study, eight hours. Requisites: courses M51A, 180. Detailed study of various problems in logic-level synthesis of VLSI digital systems, including two-level Boolean network optimization; multilevel Boolean network optimization; technology mapping for standard cell designs and field-programmable gate-array (FPGA) designs; retiming for sequential circuits; and applications of binary decision diagrams (BDDS). Letter grading.

258H. Analysis and Design of High-Speed VLSI Interconnects. (4) Lecture, four hours; outside study, eight hours. Requisites: courses M258A, 258F. Detailed study of various problems in analysis and design of high-speed VLSI interconnects at both integrated circuit (IC) and packing levels, including interconnect capacitance and resistance, lossless and lossy transmission lines, cross-talk and power distribution noise, delay models and power dissipation models, interconnect topology and geometry optimization, and clocking for high-speed systems. Letter grading.

259. Current Topics in Computer Science: System Design/Architecture. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer science system design in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with topic change. Letter grading.

261A. Problem Solving and Search. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. In-depth treatment of systematic problem-solving search algorithms in artificial intelligence, including problem spaces, brute-force search, heuristic search, linear-space algorithms, real-time search, heuristic evaluation functions, two-player games, and constraint-satisfaction problems. Letter grading.

262A. Reasoning with Partial Beliefs. (4) Lecture, four hours; outside study, eight hours. Requisite: course 112 or Electrical Engineering 131A. Review of several formalisms for representing and managing uncertainty in reasoning systems; presentation of comprehensive description of Bayesian inference using belief networks representation. Letter grading.

262B. Knowledge-Based Systems. (4) Lecture, four hours; outside study, eight hours. Requisite: course 262A. Machine representation of judgmental knowledge and uncertain relationships. Inference on inexact knowledge bases. Rule-based systems—principles, advantages, and limitations. Signal understanding. Automated planning systems. Knowledge acquisition and explanation producing techniques. Letter grading.

M262C. Causal Inference. (4) (Same as Statistics M241.) Lecture, four hours; outside study, eight hours. Requisite: course 112 or equivalent probability theory course. Techniques of using computers to interpret, summarize, and form theories of empirical observations. Mathematical analysis of trade-offs between computational complexity, storage requirements, and precision of computerized models. Letter grading.

262Z. Current Topics in Cognitive Systems. (4) Lecture, four hours; outside study, eight hours. Requisite: course 262A. Additional requisites for each offering announced in advance by department. Theory and implementation of systems that emulate or support human reasoning. Current literature and individual studies in artificial intelligence, knowledge-based systems, decision support systems, computational psychology, and heuristic programming theory. May be repeated for credit with topic change. Letter grading.

263A. Language and Thought. (4) Lecture, four hours; outside study, eight hours. Requisite: course 130 or 131 or 161. Introduction to natural language processing (NLP), with emphasis on semantics. Presentation of process models for variety of tasks, including question answering, paraphrasing, machine translation, word-sense disambiguation, narrative and editorial comprehension. Examination of both symbolic and statistical approaches to language processing and acquisition. Letter grading. 260 / Computer Science

263B. Connectionist Natural Language Processing. (4) Lecture, four hours; outside study, eight hours. Requisite: course 161 or 263A. Examination of connectionist/ANN architectures designed for natural language processing. Issues include localist versus distributed representations, variable binding, instantiation and inference via spreading activation, acquisition of language and world knowledge (for instance, via back propagation in PDP networks and competitive learning in self-organizing feature maps), and grounding of symbols in sensory/motor experience. Letter grading.

263C. Animats-Based Modeling. (4) Lecture, four hours; outside study, eight hours. Requisite: course 130 or 131 or 161. Animats are mobile/sensing animal-like software agents embedded in simulated dynamic environments. Emphasis on modeling: goal-oriented behavior via neurocontrollers, adaptation via reinforcement learning, evolutionary programming. Animat-based tasks include foraging, mate finding, predation, navigation, predator avoidance, cooperative nest construction, communication, and parenting. Letter grading.

264A. Automated Reasoning: Theory and Applications. (4) Lecture, four hours; laboratory, four hours; outside study, four hours. Requisite: course 161. Introduction to theory and practice of automated reasoning using propositional and first-order logic. Topics include syntax and semantics of formal logic; algorithms for logical reasoning, including satisfiability and entailment; syntactic and semantic restrictions on knowledge bases; effect of these restrictions on expressiveness, compactness, and computational tractability; applications of automated reasoning to diagnosis, planning, design, formal verification, and reliability analysis. Letter grading.

265A. Machine Learning. (4) Lecture, four hours; outside study, eight hours. Requisites: courses 263A, 264A. Introduction to machine learning. Learning by analogy, inductive learning, modeling creativity, learning by experience, role of episodic memory organization in learning. Examination of BACON, AM, Eurisko, HACKER, teachable production systems. Failure-driven learning. Letter grading.

M266A. Statistical Modeling and Learning in Vision and Science. (4) (Same as Statistics M232A.) Lecture, three hours. Preparation: basic statistics, linear algebra (matrix analysis), computer vision. Computer vision and pattern recognition. Study of four types of statistical models for modeling visual patterns: descriptive, causal Markov, generative (hidden Markov), and discriminative. Comparison of principles and algorithms for these models; presentation of unifying picture. Introduction of minimax entropy and EM-type and stochastic algorithms for learning. S/U or letter grading.

M266B. Statistical Computing and Inference in Vision and Image Science. (4) (Same as Statistics M232B.) Lecture, three hours. Preparation: basic statistics, linear algebra (matrix analysis), computer vision. Introduction to broad range of algorithms for statistical inference and learning that could be used in vision, pattern recognition, speech, bioinformatics, data mining. Topics include Markov chain Monte Carlo computing, sequential Monte Carlo methods, belief propagation, partial differential equations. S/U or letter grading.

267A. Neural Models. (4) Lecture, four hours; outside study, eight hours. Designed for graduate students. Review of major neurophysiological milestones in understanding brain architecture and processes. Focus on brain theories that are important for modern computer science and, in particular, on models of sensory perception, sensory-motor coordination, and cerebellar and cerebral structure and function. Students required to prepare papers analyzing research in one area of interest. Letter grading.

267B. Artificial Neural Systems and Connectionist Computing. (4) Lecture, four hours; outside study, eight hours. Designed for graduate students. Analysis of major connectionist computing paradigms and underlying models of biological and physical processes. Examination of past and current implementations of

artificial neural networks along with their applications to associative knowledge processing, general multisensor pattern recognition including speed and vision, and adaptive robot control. Students required to prepare papers analyzing research in one area of interest. Letter grading.

268. Machine Perception. (4) Lecture, four hours; outside study, eight hours. Designed for graduate students. Computational aspects of processing visual and other sensory information. Unified treatment of early vision in man and machine. Integration of symbolic and iconic representations in process of image segmentation. Computing multimodal sensory information by “neural-net” architectures. Letter grading.

268S. Seminar: Computational Neuroscience. (2) Seminar, two hours; outside study, four hours. Designed for students undertaking thesis research. Discussion of advanced topics and current research in computational neuroscience. Neural networks and connectionism as paradigm for parallel and concurrent computation in application to problems of perception, vision, multimodal sensory integration, and robotics. May be repeated for credit. S/U grading.

269. Seminar: Current Topics in Artificial Intelligence. (2 to 4) Seminar, to be arranged. Review of current literature and research practicum in area of artificial intelligence in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with topic change. Letter grading.

270A. Computer Methodology: Advanced Numerical Methods. (4) Lecture, four hours; outside study, eight hours. Requisite: Electrical Engineering 103 or Mathematics 151B or comparable experience with numerical computing. Designed for graduate computer science and engineering students. Principles of computer treatment of selected numerical problems in algebraic and differential systems, transforms and spectra, data acquisition and reduction; emphasis on concepts pertinent to modeling and simulation and applicability of contemporary developments in numerical software. Computer exercises. Letter grading.

271A. Modeling and Simulation of Lumped Parameter Systems. (4) Lecture, eight hours; outside study, four hours. Recommended preparation: course 270A. Characterization of electrical, electromechanical, and other engineering problems by systems of nonlinear ordinary differential equations. Survey of integration algorithms. Digital simulation languages for continuous systems. Real-time simulation using array processor and multiprocessor computer systems. Letter grading.

271B. Modeling and Simulation of Distributed Parameter Systems. (4) Lecture, eight hours; outside study, four hours. Recommended preparation: course 270A. Mathematical formulation of engineering field problems governed by partial differential equations. Finite difference and finite element approximations. Principal algorithms for solving elliptic, parabolic, and hyperbolic partial differential equations. Supercomputers, vector processors, multiprocessors, and array processors. Letter grading.

271C. Seminar: Advanced Simulation Methods. (2) Seminar, two hours; outside study, six hours. Requisite: course 271A. Discussion of advanced topics in simulation of systems characterized by ordinary and partial differential equations. Topics include (among others) simulation languages, dataflow machines, array processors, and advanced mathematical modeling techniques. Topics vary each term. May be repeated for credit. S/U grading.

272. Advanced Discrete Event Simulation and Modeling Techniques. (4) Lecture, four hours; outside study, eight hours. In-depth study in discrete event simulation and modeling techniques, including building valid and credible simulation models, output analysis of systems, comparisons of alternative system configurations. Variance reduction techniques, simulation models of computer systems and manufacturing systems. Letter grading.

273A. Digital Processing of Engineering and Statistical Data. (4) Lecture, four hours; outside study, eight hours. Computer methods for processing engineering and statistical data. Algorithms to evaluate recursive filter functions, Fourier series, power spectral, analysis correlation computations, and statistical testing. Letter grading.

C274C. Computer Animation. (4) Lecture, four hours; discussion, two hours; outside study, six hours. Requisite: course 174A. Introduction to computer animation, including basic principles of character modeling, forward and inverse kinematics, forward and inverse dynamics, motion capture animation techniques, physics-based animation of particles and systems, and motor control. Concurrently scheduled with course C174C. Letter grading.

275. Artificial Life for Computer Graphics and Vision. (4) Lecture, four hours; outside study, eight hours. Enforced requisite: course 174A. Recommended: course 161. Investigation of important role that concepts from artificial life, emerging discipline that spans computational and biological sciences, can play in construction of advanced computer graphics and vision models for virtual reality, animation, interactive games, active vision, visual sensor networks, medical image analysis, etc. Focus on comprehensive models that can realistically emulate variety of living things (plants and animals) from lower animals to humans. Exposure to effective computational modeling of natural phenomena of life and their incorporation into sophisticated, self-animating graphical entities. Specific topics include modeling plants using Lsystems, biomechanical simulation and control, behavioral animation, reinforcement and neural-network learning of locomotion, cognitive modeling, artificial animals and humans, human facial animation, and artificial evolution. Letter grading.

M276A. Pattern Recognition and Machine Learning. (4) (Same as Statistics M231.) Lecture, three hours. Designed for graduate students. Fundamental concepts, theories, and algorithms for pattern recognition and machine learning that are used in computer vision, image processing, speech recognition, data mining, statistics, and computational biology. Topics include Bayesian decision theory, parametric and nonparametric learning, clustering, complexity (VC-dimension, MDL, AIC), PCA/ICA/TCA, MDS, SVM, boosting. S/U or letter grading.

276B. Structured Computer Vision. (4) Lecture, four hours; outside study, eight hours. Designed for graduate students. Methods for computer processing of image data. Systems, concepts, and algorithms for image analysis, radiologic and robotic applications. Letter grading.

276C. Speech and Language Communication in Artificial Intelligence. (4) Lecture, four hours; outside study, eight hours. Requisite: course M276A or 276B. Topics in human-computer communication: interaction with pictorial information systems, sound and symbol generation by humans and machines, semantics of data, systems for speech recognition and understanding. Use of speech and text for computer input and output in applications. Letter grading.

279. Current Topics in Computer Science: Methodology. (2 to 12) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer science methodology in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. May be repeated for credit with topic change. Letter grading.

280A-280ZZ. Algorithms. (4 each) Lecture, four hours; outside study, eight hours. Requisite: course 180. Additional requisites for each offering announced in advance by department. Selections from design, analysis, optimization, and implementation of algorithms; computational complexity and general theory of algorithms; algorithms for particular application areas. Subtitles of some current sections: Principles of Design and Analysis (280A); Distributed Algorithms (280D); Graphs and Networks (280G). May be repeated for credit with consent of instructor and topic change. Letter grading: Computer Science / 261

280AP. Approximation Algorithms. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. Background in discrete mathematics helpful. Theoretically sound techniques for dealing with NPHard problems. Inability to solve these problems efficiently means algorithmic techniques are based on approximation—finding solution that is near to best possible in efficient running time. Coverage of approximation techniques for number of different problems, with algorithm design techniques that include primaldual method, linear program rounding, greedy algorithms, and local search. Letter grading.

281A. Computability and Complexity. (4) Lecture, four hours; outside study, eight hours. Requisite: course 181 or compatible background. Concepts fundamental to study of discrete information systems and theory of computing, with emphasis on regular sets of strings, Turing-recognizable (recursively enumerable) sets, closure properties, machine characterizations, nondeterminisms, decidability, unsolvable problems, “easy” and “hard” problems, PTIME/NPTIME. Letter grading.

281D. Discrete State Systems. (4) Lecture, four hours; outside study, eight hours. Recommended requisite: course 181. Finite-state machines, transducers, and their generalizations; regular expressions, transduction expressions, realizability; decomposition, synthesis, and design considerations; topics in state and system identification and fault diagnosis, linear machines, probabilistic machines, applications in coding, communication, computing, system modeling, and simulation. Letter grading.

M282A. Cryptography. (4) (Same as Mathematics M209A.) Lecture, four hours; outside study, eight hours. Introduction to theory of cryptography, stressing rigorous definitions and proofs of security. Topics include notions of hardness, one-way functions, hardcore bits, pseudorandom generators, pseudorandom functions and pseudorandom permutations, semantic security, public-key and private-key encryption, secret-sharing, message authentication, digital signatures, interactive proofs, zero-knowledge proofs, collision-resistant hash functions, commitment protocols, key-agreement, contract signing, and two-party secure computation with static security. Letter grading.

M282B. Cryptographic Protocols. (4) (Same as Mathematics M209B.) Lecture, four hours; outside study, eight hours. Requisite: course M282A. Consideration of advanced cryptographic protocol design and analysis. Topics include noninteractive zeroknowledge proofs; zero-knowledge arguments; concurrent and non-black-box zero-knowledge; IP=PSPACE proof, stronger notions of security for public-key encryption, including chosen-ciphertext security; secure multiparty computation; dealing with dynamic adversary; nonmalleability and composability of secure protocols; software protection; threshold cryptography; identity-based cryptography; private information retrieval; protection against man-in-middle attacks; voting protocols; identification protocols; digital cash schemes; lower bounds on use of cryptographic primitives, software obfuscation. May be repeated for credit with topic change. Letter grading.

M283A-M283B. Topics in Applied Number Theory. (4-4) (Same as Mathematics M208A-M208B.) Lecture, three hours. Basic number theory, including congruences and prime numbers. Cryptography: public-key and discrete log cryptosystems. Attacks on cryptosystems. Primality testing and factorization methods. Elliptic curve methods. Topics from coding theory: Hamming codes, cyclic codes, Gilbert/Varshamov bounds, Shannon theorem. S/U or letter grading.

284A-284ZZ. Topics in Automata and Languages. (4 each) Lecture, four hours; outside study, eight hours. Requisite: course 181. Additional requisites for each offering announced in advance by department. Selections from families of formal languages, grammars, machines, operators; pushdown automata, context-free languages and their generalizations, parsing; multidimensional grammars, developmental systems; machine-based complexity. Subtitles of some current and planned sections: Context-Free

Languages (284A), Parsing Algorithms (284P). May be repeated for credit with consent of instructor and topic change. Letter grading.

CM286B. Computational Systems Biology: Modeling and Simulation of Biological Systems. (5) (Same as Biomedical Engineering CM286B.) Lecture, four hours; laboratory, three hours; outside study, eight hours. Corequisite: Electrical Engineering 102. Dynamic biosystems modeling and computer simulation methods for studying biological/biomedical processes and systems at multiple levels of organization. Control system, multicompartmental, predator-prey, pharmacokinetic (PK), pharmacodynamic (PD), and other structural modeling methods applied to life sciences problems at molecular, cellular (biochemical pathways/networks), organ, and organismic levels. Both theory- and data-driven modeling, with focus on translating biomodeling goals and data into mathematics models and implementing them for simulation and analysis. Basics of numerical simulation algorithms, with modeling software exercises in class and PC laboratory assignments. Concurrently scheduled with course CM186B. Letter grading.

CM286C. Biomodeling Research and Research Communication Workshop. (2 to 4) (Formerly numbered CM286L.) (Same as Biomedical Engineering CM286C.) Lecture, one hour; discussion, two hours; laboratory, one hour; outside study, eight hours. Requisite: course CM286B. Closely directed, interactive, and real research experience in active quantitative systems biology research laboratory. Direction on how to focus on topics of current interest in scientific community, appropriate to student interests and capabilities. Critiques of oral presentations and written progress reports explain how to proceed with search for research results. Major emphasis on effective research reporting, both oral and written. Concurrently scheduled with course CM186C. Letter grading.

287A. Theory of Program Structure. (4) Lecture, four hours; outside study, eight hours. Requisite: course 181. Models of computer programs and their syntax and semantics; emphasis on programs and recursion schemes; equivalence, optimization, correctness, and translatability of programs; expressive power of program constructs and data structures; selected current topics. Letter grading.

288S. Seminar: Theoretical Computer Science. (2) Seminar, two hours; outside study, six hours. Requisites: courses 280A, 281A. Intended for students undertaking thesis research. Discussion of advanced topics and current research in such areas as algorithms and complexity models for parallel and concurrent computation, and formal language and automata theory. May be repeated for credit. S/U grading.

289A-289ZZ. Current Topics in Computer Theory. (2 to 12 each) Lecture, four hours; outside study, eight hours. Review of current literature in area of computer theory in which instructor has developed special proficiency as consequence of research interests. Students report on selected topics. Letter grading:

289CO. Complexity Theory. (4). Lecture, four hours; outside study, eight hours. Diagonalization, polynomial-time hierarchy, PCP theorem, randomness and derandomization, circuit complexity, attempts and limitations to proving P does not equal NP, average-case complexity, one-way functions, hardness amplification. Problem sets and presentation of previous and original research related to course topics. Letter grading.

289OA. Online Algorithms. (4) Lecture, four hours; outside study, eight hours. Requisite: course 180. Introduction to decision making under uncertainty and competitive analysis. Review of current research in online algorithms for problems arising in many areas, such as data and memory management, searching and navigating in unknown terrains, and server systems. Letter grading.

289RA. Randomized Algorithms. (4) Lecture, four hours; outside study, eight hours. Basic concepts and design techniques for randomized algorithms, such as probability theory, Markov chains, random walks, and probabilistic method. Applications to randomized al-

gorithms in data structures, graph theory, computational geometry, number theory, and parallel and distributed systems. Letter grading.

M296A. Advanced Modeling Methodology for Dynamic Biomedical Systems. (4) (Same as Biomedical Engineering M296A and Medicine M270C.) Lecture, four hours; outside study, eight hours. Requisite: Electrical Engineering 141 or 142 or Mathematics 115A or Mechanical and Aerospace Engineering 171A. Development of dynamic systems modeling methodology for physiological, biomedical, pharmacological, chemical, and related systems. Control system, multicompartmental, noncompartmental, and input/output models, linear and nonlinear. Emphasis on model applications, limitations, and relevance in biomedical sciences and other limited data environments. Problem solving in PC laboratory. Letter grading.

M296B. Optimal Parameter Estimation and Experiment Design for Biomedical Systems. (4) (Same as Biomathematics M270, Biomedical Engineering M296B, and Medicine M270D.) Lecture, four hours; outside study, eight hours. Requisite: course M296A or Biomathematics 220. Estimation methodology and model parameter estimation algorithms for fitting dynamic system models to biomedical data. Model discrimination methods. Theory and algorithms for designing optimal experiments for developing and quantifying models, with special focus on optimal sampling schedule design for kinetic models. Exploration of PC software for model building and optimal experiment design via applications in physiology and pharmacology. Letter grading.

M296C. Advanced Topics and Research in Biomedical Systems Modeling and Computing. (4) (Same as Biomedical Engineering M296C and Medicine M270E.) Lecture, four hours; outside study, eight hours. Requisite: course M296A. Recommended: course M296B. Research techniques and experience on special topics involving models, modeling methods, and model/computing in biological and medical sciences. Review and critique of literature. Research problem searching and formulation. Approaches to solutions. Individual M.S.- and Ph.D.-level project training. Letter grading.

M296D. Introduction to Computational Cardiology. (4) (Same as Biomedical Engineering M296D.) Lecture, four hours; outside study, eight hours. Requisite: course CM186B. Introduction to mathematical modeling and computer simulation of cardiac electrophysiological process. Ionic models of action potential (AP). Theory of AP propagation in one-dimensional and two-dimensional cardiac tissue. Simulation on sequential and parallel supercomputers, choice of numerical algorithms, to optimize accuracy and to provide computational stability. Letter grading.

298. Research Seminar: Computer Science. (2 to

4) Seminar, two to four hours; outside study, four to eight hours. Designed for graduate computer science students. Discussion of advanced topics and current research in algorithmic processes that describe and transform information: theory, analysis, design, efficiency, implementation, and application. May be repeated for credit. S/U grading.

375. Teaching Apprentice Practicum. (1 to 4) Seminar, to be arranged. Preparation: apprentice personnel employment as teaching assistant, associate, or fellow. Teaching apprenticeship under active guidance and supervision of regular faculty member responsible for curriculum and instruction at UCLA. May be repeated for credit. S/U grading.

495. Teaching Assistant Training Seminar. (2) Seminar, two hours; outside study, six hours. Limited to graduate Computer Science Department students. Seminar on communication of computer science materials in classroom: preparation, organization of material, presentation, use of visual aids, grading, advising, and rapport with students. S/U grading.

495B. Teaching with Technology. (2) Seminar, two hours; outside study, four hours. Limited to graduate Computer Science Department teaching assistants. Seminar for teaching assistants covering how technology can be used to aid instruction in and out of classroom. S/U grading. 262 / Computing, Program in

497D-497E. Field Projects in Computer Science. (4-4) Fieldwork, to be arranged. Students are divided into teams led by instructor; each team is assigned one external company or organization that they investigate as candidate for possible computerization, submitting team report of their findings and recommendations. In Progress (497D) and S/U or letter (497E) grading.

596. Directed Individual or Tutorial Studies. (2 to

8) Tutorial, to be arranged. Limited to graduate computer science students. Petition forms to request enrollment may be obtained from assistant dean, Graduate Studies. Supervised investigation of advanced technical problems. S/U grading.

597A. Preparation for M.S. Comprehensive Examination. (2 to 12) Tutorial, to be arranged. Limited to graduate computer science students. Reading and preparation for M.S. comprehensive examination. S/U grading.

597B. Preparation for Ph.D. Preliminary Examinations. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Preparation for Ph.D. preliminary examinations. S/U grading.

597C. Preparation for Ph.D. Oral Qualifying Examination. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Preparation for oral qualifying examination, including preliminary research on dissertation. S/U grading.

598. Research for and Preparation of M.S. Thesis. (2 to 12) Tutorial, to be arranged. Limited to graduate computer science students. Supervised independent research for M.S. candidates, including thesis prospectus. S/U grading.

599. Research for and Preparation of Ph.D. Dissertation. (2 to 16) Tutorial, to be arranged. Limited to graduate computer science students. Petition forms to request enrollment may be obtained from assistant dean, Graduate Studies. S/U grading.